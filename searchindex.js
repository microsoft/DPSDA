Search.setIndex({"docnames": ["api/api", "api/modules", "api/pe", "api/pe.api", "api/pe.api.api", "api/pe.api.image", "api/pe.api.image.avatar_api", "api/pe.api.image.draw_text_api", "api/pe.api.image.improved_diffusion_api", "api/pe.api.image.improved_diffusion_lib", "api/pe.api.image.improved_diffusion_lib.gaussian_diffusion", "api/pe.api.image.improved_diffusion_lib.unet", "api/pe.api.image.nearest_image_api", "api/pe.api.image.stable_diffusion_api", "api/pe.api.text", "api/pe.api.text.llm_augpe_api", "api/pe.api.util", "api/pe.callback", "api/pe.callback.callback", "api/pe.callback.common", "api/pe.callback.common.compute_fid", "api/pe.callback.common.compute_precision_recall", "api/pe.callback.common.save_checkpoints", "api/pe.callback.image", "api/pe.callback.image.dpimagebench_classify_images", "api/pe.callback.image.dpimagebench_lib", "api/pe.callback.image.dpimagebench_lib.densenet", "api/pe.callback.image.dpimagebench_lib.ema", "api/pe.callback.image.dpimagebench_lib.resnet", "api/pe.callback.image.dpimagebench_lib.resnext", "api/pe.callback.image.dpimagebench_lib.wrn", "api/pe.callback.image.sample_images", "api/pe.callback.image.save_all_images", "api/pe.callback.text", "api/pe.callback.text.save_text_to_csv", "api/pe.constant", "api/pe.constant.data", "api/pe.data", "api/pe.data.data", "api/pe.data.image", "api/pe.data.image.camelyon17", "api/pe.data.image.cat", "api/pe.data.image.celeba", "api/pe.data.image.cifar10", "api/pe.data.image.digiface1m", "api/pe.data.image.image", "api/pe.data.image.mnist", "api/pe.data.text", "api/pe.data.text.openreview", "api/pe.data.text.pubmed", "api/pe.data.text.text_csv", "api/pe.data.text.yelp", "api/pe.dp", "api/pe.dp.dp", "api/pe.dp.gaussian", "api/pe.embedding", "api/pe.embedding.embedding", "api/pe.embedding.image", "api/pe.embedding.image.fld_inception", "api/pe.embedding.image.inception", "api/pe.embedding.text", "api/pe.embedding.text.sentence_transformer", "api/pe.histogram", "api/pe.histogram.histogram", "api/pe.histogram.nearest_neighbor_backend", "api/pe.histogram.nearest_neighbor_backend.auto", "api/pe.histogram.nearest_neighbor_backend.faiss", "api/pe.histogram.nearest_neighbor_backend.sklearn", "api/pe.histogram.nearest_neighbors", "api/pe.llm", "api/pe.llm.azure_openai", "api/pe.llm.huggingface", "api/pe.llm.huggingface.huggingface", "api/pe.llm.huggingface.register_fastchat", "api/pe.llm.huggingface.register_fastchat.gpt2", "api/pe.llm.llm", "api/pe.llm.openai", "api/pe.llm.request", "api/pe.logger", "api/pe.logger.csv_print", "api/pe.logger.image_file", "api/pe.logger.log_print", "api/pe.logger.logger", "api/pe.logger.matplotlib_pdf", "api/pe.logging", "api/pe.metric_item", "api/pe.population", "api/pe.population.pe_population", "api/pe.population.population", "api/pe.runner", "api/pe.runner.pe", "api/pe.util", "api/pe.util.download", "getting_started/details/api", "getting_started/details/callback_and_logger", "getting_started/details/data", "getting_started/details/details", "getting_started/details/dp", "getting_started/details/embedding", "getting_started/details/histogram", "getting_started/details/overview", "getting_started/details/population", "getting_started/details/runner", "getting_started/examples", "getting_started/getting_started", "getting_started/installation", "getting_started/intro", "getting_started/using_your_own_data_apis", "index"], "filenames": ["api/api.rst", "api/modules.rst", "api/pe.rst", "api/pe.api.rst", "api/pe.api.api.rst", "api/pe.api.image.rst", "api/pe.api.image.avatar_api.rst", "api/pe.api.image.draw_text_api.rst", "api/pe.api.image.improved_diffusion_api.rst", "api/pe.api.image.improved_diffusion_lib.rst", "api/pe.api.image.improved_diffusion_lib.gaussian_diffusion.rst", "api/pe.api.image.improved_diffusion_lib.unet.rst", "api/pe.api.image.nearest_image_api.rst", "api/pe.api.image.stable_diffusion_api.rst", "api/pe.api.text.rst", "api/pe.api.text.llm_augpe_api.rst", "api/pe.api.util.rst", "api/pe.callback.rst", "api/pe.callback.callback.rst", "api/pe.callback.common.rst", "api/pe.callback.common.compute_fid.rst", "api/pe.callback.common.compute_precision_recall.rst", "api/pe.callback.common.save_checkpoints.rst", "api/pe.callback.image.rst", "api/pe.callback.image.dpimagebench_classify_images.rst", "api/pe.callback.image.dpimagebench_lib.rst", "api/pe.callback.image.dpimagebench_lib.densenet.rst", "api/pe.callback.image.dpimagebench_lib.ema.rst", "api/pe.callback.image.dpimagebench_lib.resnet.rst", "api/pe.callback.image.dpimagebench_lib.resnext.rst", "api/pe.callback.image.dpimagebench_lib.wrn.rst", "api/pe.callback.image.sample_images.rst", "api/pe.callback.image.save_all_images.rst", "api/pe.callback.text.rst", "api/pe.callback.text.save_text_to_csv.rst", "api/pe.constant.rst", "api/pe.constant.data.rst", "api/pe.data.rst", "api/pe.data.data.rst", "api/pe.data.image.rst", "api/pe.data.image.camelyon17.rst", "api/pe.data.image.cat.rst", "api/pe.data.image.celeba.rst", "api/pe.data.image.cifar10.rst", "api/pe.data.image.digiface1m.rst", "api/pe.data.image.image.rst", "api/pe.data.image.mnist.rst", "api/pe.data.text.rst", "api/pe.data.text.openreview.rst", "api/pe.data.text.pubmed.rst", "api/pe.data.text.text_csv.rst", "api/pe.data.text.yelp.rst", "api/pe.dp.rst", "api/pe.dp.dp.rst", "api/pe.dp.gaussian.rst", "api/pe.embedding.rst", "api/pe.embedding.embedding.rst", "api/pe.embedding.image.rst", "api/pe.embedding.image.fld_inception.rst", "api/pe.embedding.image.inception.rst", "api/pe.embedding.text.rst", "api/pe.embedding.text.sentence_transformer.rst", "api/pe.histogram.rst", "api/pe.histogram.histogram.rst", "api/pe.histogram.nearest_neighbor_backend.rst", "api/pe.histogram.nearest_neighbor_backend.auto.rst", "api/pe.histogram.nearest_neighbor_backend.faiss.rst", "api/pe.histogram.nearest_neighbor_backend.sklearn.rst", "api/pe.histogram.nearest_neighbors.rst", "api/pe.llm.rst", "api/pe.llm.azure_openai.rst", "api/pe.llm.huggingface.rst", "api/pe.llm.huggingface.huggingface.rst", "api/pe.llm.huggingface.register_fastchat.rst", "api/pe.llm.huggingface.register_fastchat.gpt2.rst", "api/pe.llm.llm.rst", "api/pe.llm.openai.rst", "api/pe.llm.request.rst", "api/pe.logger.rst", "api/pe.logger.csv_print.rst", "api/pe.logger.image_file.rst", "api/pe.logger.log_print.rst", "api/pe.logger.logger.rst", "api/pe.logger.matplotlib_pdf.rst", "api/pe.logging.rst", "api/pe.metric_item.rst", "api/pe.population.rst", "api/pe.population.pe_population.rst", "api/pe.population.population.rst", "api/pe.runner.rst", "api/pe.runner.pe.rst", "api/pe.util.rst", "api/pe.util.download.rst", "getting_started/details/api.rst", "getting_started/details/callback_and_logger.rst", "getting_started/details/data.rst", "getting_started/details/details.rst", "getting_started/details/dp.rst", "getting_started/details/embedding.rst", "getting_started/details/histogram.rst", "getting_started/details/overview.rst", "getting_started/details/population.rst", "getting_started/details/runner.rst", "getting_started/examples.rst", "getting_started/getting_started.rst", "getting_started/installation.rst", "getting_started/intro.rst", "getting_started/using_your_own_data_apis.rst", "index.rst"], "titles": ["API Reference", "pe", "pe package", "pe.api package", "pe.api.api module", "pe.api.image package", "pe.api.image.avatar_api module", "pe.api.image.draw_text_api module", "pe.api.image.improved_diffusion_api module", "pe.api.image.improved_diffusion_lib package", "pe.api.image.improved_diffusion_lib.gaussian_diffusion module", "pe.api.image.improved_diffusion_lib.unet module", "pe.api.image.nearest_image_api module", "pe.api.image.stable_diffusion_api module", "pe.api.text package", "pe.api.text.llm_augpe_api module", "pe.api.util module", "pe.callback package", "pe.callback.callback module", "pe.callback.common package", "pe.callback.common.compute_fid module", "pe.callback.common.compute_precision_recall module", "pe.callback.common.save_checkpoints module", "pe.callback.image package", "pe.callback.image.dpimagebench_classify_images module", "pe.callback.image.dpimagebench_lib package", "pe.callback.image.dpimagebench_lib.densenet module", "pe.callback.image.dpimagebench_lib.ema module", "pe.callback.image.dpimagebench_lib.resnet module", "pe.callback.image.dpimagebench_lib.resnext module", "pe.callback.image.dpimagebench_lib.wrn module", "pe.callback.image.sample_images module", "pe.callback.image.save_all_images module", "pe.callback.text package", "pe.callback.text.save_text_to_csv module", "pe.constant package", "pe.constant.data module", "pe.data package", "pe.data.data module", "pe.data.image package", "pe.data.image.camelyon17 module", "pe.data.image.cat module", "pe.data.image.celeba module", "pe.data.image.cifar10 module", "pe.data.image.digiface1m module", "pe.data.image.image module", "pe.data.image.mnist module", "pe.data.text package", "pe.data.text.openreview module", "pe.data.text.pubmed module", "pe.data.text.text_csv module", "pe.data.text.yelp module", "pe.dp package", "pe.dp.dp module", "pe.dp.gaussian module", "pe.embedding package", "pe.embedding.embedding module", "pe.embedding.image package", "pe.embedding.image.fld_inception module", "pe.embedding.image.inception module", "pe.embedding.text package", "pe.embedding.text.sentence_transformer module", "pe.histogram package", "pe.histogram.histogram module", "pe.histogram.nearest_neighbor_backend package", "pe.histogram.nearest_neighbor_backend.auto module", "pe.histogram.nearest_neighbor_backend.faiss module", "pe.histogram.nearest_neighbor_backend.sklearn module", "pe.histogram.nearest_neighbors module", "pe.llm package", "pe.llm.azure_openai module", "pe.llm.huggingface package", "pe.llm.huggingface.huggingface module", "pe.llm.huggingface.register_fastchat package", "pe.llm.huggingface.register_fastchat.gpt2 module", "pe.llm.llm module", "pe.llm.openai module", "pe.llm.request module", "pe.logger package", "pe.logger.csv_print module", "pe.logger.image_file module", "pe.logger.log_print module", "pe.logger.logger module", "pe.logger.matplotlib_pdf module", "pe.logging package", "pe.metric_item package", "pe.population package", "pe.population.pe_population module", "pe.population.population module", "pe.runner package", "pe.runner.pe module", "pe.util package", "pe.util.download module", "APIs", "Callbacks and Loggers", "Data", "Details of the Library", "DP", "Embeddings", "Histograms", "Overview", "Population", "Runner", "Examples", "Getting Started", "Installation", "What is Private Evolution?", "Using Your Own Data/APIs", "Private Evolution Documentation"], "terms": {"pe": [0, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 107, 108], "packag": [0, 1, 68, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 108], "subpackag": [0, 1, 108], "imag": [0, 1, 2, 3, 17, 36, 37, 55, 78, 80, 85, 93, 94, 95, 98, 100, 104, 106, 107, 108], "submodul": [0, 1, 2, 108], "text": [0, 1, 2, 3, 7, 17, 36, 37, 55, 93, 94, 95, 98, 100, 104, 106, 107, 108], "modul": [0, 1, 2, 3, 5, 9, 14, 17, 19, 23, 25, 33, 35, 37, 39, 47, 52, 55, 57, 60, 62, 64, 69, 71, 73, 78, 86, 89, 91, 94, 95, 100, 108], "util": [0, 1, 2, 3, 7, 8, 13, 17, 24, 100, 108], "constantlist": [0, 1, 2, 3, 16], "callback": [0, 1, 2, 89, 90, 95, 96, 100, 104, 108], "__call__": [0, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 31, 32, 33, 34, 108], "computefid": [0, 1, 2, 17, 19, 20, 94, 108], "__init__": [0, 1, 2, 3, 5, 7, 8, 13, 17, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 108], "computeprecisionrecal": [0, 1, 2, 17, 19, 21, 108], "dpimagebenchclassifyimag": [0, 1, 2, 17, 23, 24, 108], "_get_data_load": [0, 1, 2, 17, 23, 24, 108], "_get_images_and_label_from_data": [0, 1, 2, 17, 23, 24, 108], "_get_model": [0, 1, 2, 17, 23, 24, 108], "evalu": [0, 1, 2, 17, 23, 24, 26, 27, 28, 29, 30, 89, 90, 100, 108], "sampleimag": [0, 1, 2, 17, 23, 31, 94, 108], "saveallimag": [0, 1, 2, 17, 23, 32, 94, 108], "_save_imag": [0, 1, 2, 17, 23, 32, 108], "savecheckpoint": [0, 1, 2, 17, 19, 22, 94, 108], "_get_checkpoint_path": [0, 1, 2, 17, 19, 22, 108], "savetexttocsv": [0, 1, 2, 17, 33, 34, 94, 108], "_get_csv_path": [0, 1, 2, 17, 33, 34, 108], "common": [0, 1, 2, 17, 108], "constant": [0, 1, 2, 52, 54, 62, 68, 86, 87, 95, 108], "data": [0, 1, 2, 4, 7, 8, 13, 17, 18, 20, 21, 22, 24, 31, 32, 34, 35, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 68, 86, 87, 88, 89, 90, 94, 96, 98, 100, 103, 104, 106, 108], "clean_histogram_column_nam": [0, 1, 2, 35, 36, 52, 54, 62, 68], "dp_histogram_column_nam": [0, 1, 2, 35, 36, 52, 54], "embedding_column_nam": [0, 1, 2, 35, 36], "from_last_flag_column_nam": [0, 1, 2, 35, 36], "histogram_nearest_neighbors_voting_ids_column_nam": [0, 1, 2, 35, 36], "image_data_column_nam": [0, 1, 2, 35, 36], "image_model_label_column_nam": [0, 1, 2, 35, 36], "image_prompt_column_nam": [0, 1, 2, 35, 36], "label_id_column_nam": [0, 1, 2, 35, 36, 95], "llm_parameters_column_nam": [0, 1, 2, 35, 36], "llm_request_messages_column_nam": [0, 1, 2, 35, 36], "lookahead_embedding_column_nam": [0, 1, 2, 35, 36, 62, 68], "parent_syn_data_index_column_nam": [0, 1, 2, 35, 36], "post_processed_dp_histogram_column_nam": [0, 1, 2, 35, 36, 86, 87], "text_data_column_nam": [0, 1, 2, 35, 36], "variation_api_fold_id_column_nam": [0, 1, 2, 35, 36], "camelyon17": [0, 1, 2, 37, 39, 95, 103, 108], "cat": [0, 1, 2, 37, 39, 95, 103, 108], "url": [0, 1, 2, 8, 37, 39, 41, 48, 49, 51, 92, 108], "_download": [0, 1, 2, 37, 39, 41, 47, 48, 49, 51, 108], "_read_data": [0, 1, 2, 37, 39, 41, 108], "celeba": [0, 1, 2, 37, 39, 103, 108], "cifar10": [0, 1, 2, 37, 39, 95, 103, 108], "concat": [0, 1, 2, 37, 38, 108], "filter": [0, 1, 2, 17, 20, 21, 37, 38, 108], "filter_label_id": [0, 1, 2, 37, 38, 108], "load_checkpoint": [0, 1, 2, 37, 38, 89, 90, 108], "merg": [0, 1, 2, 37, 38, 108], "random_split": [0, 1, 2, 37, 38, 108], "random_trunc": [0, 1, 2, 37, 38, 108], "save_checkpoint": [0, 1, 2, 17, 19, 37, 38, 89, 90, 108], "set_label_id": [0, 1, 2, 37, 38, 108], "truncat": [0, 1, 2, 37, 38, 108], "digiface1m": [0, 1, 2, 37, 39, 108], "_read_and_process_imag": [0, 1, 2, 37, 39, 44, 108], "mnist": [0, 1, 2, 37, 39, 103, 108], "openreview": [0, 1, 2, 37, 47, 95, 103, 108], "download_info_dict": [0, 1, 2, 37, 47, 48, 49, 51, 108], "pubm": [0, 1, 2, 37, 47, 95, 103, 108], "textcsv": [0, 1, 2, 37, 47, 48, 49, 50, 51, 95, 107, 108], "yelp": [0, 1, 2, 37, 47, 95, 103, 108], "load_image_fold": [0, 1, 2, 37, 39, 45, 95, 107, 108], "dp": [0, 1, 2, 36, 89, 90, 96, 100, 104, 106, 108], "add_nois": [0, 1, 2, 52, 53, 54, 97, 108], "set_epsilon_and_delta": [0, 1, 2, 52, 53, 54, 97, 108], "gaussian": [0, 1, 2, 52, 89, 90, 97, 108], "compute_epsilon": [0, 1, 2, 52, 54], "delta_gaussian": [0, 1, 2, 52, 54], "eps_gaussian": [0, 1, 2, 52, 54], "get_noise_multipli": [0, 1, 2, 52, 54], "embed": [0, 1, 2, 17, 20, 21, 36, 62, 65, 66, 67, 68, 95, 96, 99, 100, 104, 108], "column_nam": [0, 1, 2, 55, 56, 60, 61, 98, 108], "compute_embed": [0, 1, 2, 55, 56, 57, 58, 59, 60, 61, 98, 108], "filter_uncomputed_row": [0, 1, 2, 55, 56, 108], "merge_computed_row": [0, 1, 2, 55, 56, 108], "fldincept": [0, 1, 2, 55, 57, 58, 108], "incept": [0, 1, 2, 17, 20, 55, 57, 58, 98, 108], "sentencetransform": [0, 1, 2, 55, 60, 61, 98, 108], "histogram": [0, 1, 2, 36, 52, 53, 54, 86, 87, 89, 90, 96, 97, 100, 104, 108], "compute_histogram": [0, 1, 2, 62, 63, 68, 99, 108], "nearestneighbor": [0, 1, 2, 62, 68, 99, 108], "_compute_lookahead_embed": [0, 1, 2, 62, 68, 108], "_log_lookahead": [0, 1, 2, 62, 68, 108], "_log_voting_detail": [0, 1, 2, 62, 68, 108], "nearest_neighbor_backend": [0, 1, 2, 62, 108], "nearest_neighbor": [0, 1, 2, 36, 62, 108], "llm": [0, 1, 2, 36, 93, 103, 108], "azureopenaillm": [0, 1, 2, 69, 70, 93, 108], "_get_environment_vari": [0, 1, 2, 69, 70, 76, 108], "_get_response_for_one_request": [0, 1, 2, 69, 70, 76, 108], "generation_arg_map": [0, 1, 2, 69, 70, 71, 72, 75, 108], "get_respons": [0, 1, 2, 69, 70, 71, 72, 75, 76, 108], "huggingfacellm": [0, 1, 2, 69, 71, 72, 93, 108], "_get_conv_templ": [0, 1, 2, 69, 71, 72, 108], "_get_prompt": [0, 1, 2, 69, 71, 72, 108], "_get_respons": [0, 1, 2, 69, 71, 72, 108], "get_generation_arg": [0, 1, 2, 69, 75, 108], "openaillm": [0, 1, 2, 69, 76, 93, 108], "request": [0, 1, 2, 36, 69, 70, 72, 75, 76, 108], "huggingfac": [0, 1, 2, 69, 93, 103, 108], "azure_openai": [0, 1, 2, 69, 108], "openai": [0, 1, 2, 8, 10, 11, 45, 69, 70, 72, 93, 103, 108], "logger": [0, 1, 2, 84, 89, 90, 96, 100, 104, 108], "csvprint": [0, 1, 2, 78, 79, 94, 108], "_clear_log": [0, 1, 2, 78, 79, 108], "_flush": [0, 1, 2, 78, 79, 108], "_get_log_path": [0, 1, 2, 78, 79, 108], "_log_float": [0, 1, 2, 78, 79, 108], "clean_up": [0, 1, 2, 78, 79, 82, 85, 108], "log": [0, 1, 2, 62, 68, 78, 79, 80, 81, 82, 83, 89, 90, 94, 100, 108], "imagefil": [0, 1, 2, 78, 80, 94, 108], "_get_image_path": [0, 1, 2, 78, 80, 108], "_log_imag": [0, 1, 2, 78, 80, 108], "_log_image_list": [0, 1, 2, 78, 80, 108], "logprint": [0, 1, 2, 78, 81, 94, 108], "matplotlibpdf": [0, 1, 2, 78, 83, 94, 108], "_get_pdf_path": [0, 1, 2, 78, 83, 108], "csv_print": [0, 1, 2, 78, 108], "image_fil": [0, 1, 2, 78, 108], "log_print": [0, 1, 2, 78, 108], "matplotlib_pdf": [0, 1, 2, 78, 108], "execution_logg": [0, 1, 2, 78, 81, 84, 108], "setup_log": [0, 1, 2, 84, 108], "metric_item": [0, 1, 2, 17, 20, 21, 24, 31, 78, 79, 80, 81, 82, 83, 94, 108], "floatlistmetricitem": [0, 1, 2, 17, 24, 78, 79, 81, 85, 108], "floatmetricitem": [0, 1, 2, 17, 20, 21, 78, 79, 81, 85, 108], "imagelistmetricitem": [0, 1, 2, 17, 31, 78, 80, 85, 108], "num_images_per_row": [0, 1, 2, 85, 108], "imagemetricitem": [0, 1, 2, 78, 80, 85, 108], "matplotlibmetricitem": [0, 1, 2, 78, 83, 85, 108], "metricitem": [0, 1, 2, 78, 79, 82, 85, 94, 108], "name": [0, 1, 2, 7, 13, 17, 24, 36, 37, 42, 45, 50, 55, 56, 61, 69, 70, 72, 76, 78, 79, 80, 83, 84, 85, 95, 98, 108], "valu": [0, 1, 2, 7, 16, 52, 53, 54, 62, 63, 69, 70, 76, 85, 89, 90, 95, 97, 99, 100, 108], "metric_scop": [0, 1, 2, 85, 108], "popul": [0, 1, 2, 89, 90, 96, 100, 104, 108], "pepopul": [0, 1, 2, 86, 87, 101, 108], "_post_process_histogram": [0, 1, 2, 86, 87, 108], "_select_data": [0, 1, 2, 86, 87, 108], "initi": [0, 1, 2, 27, 86, 87, 88, 89, 90, 93, 100, 101, 108], "next": [0, 1, 2, 86, 87, 88, 93, 100, 101, 108], "pe_popul": [0, 1, 2, 86, 108], "runner": [0, 1, 2, 96, 100, 104, 108], "_clean_up_logg": [0, 1, 2, 89, 90, 108], "_get_num_samples_per_label_id": [0, 1, 2, 89, 90, 108], "_log_metr": [0, 1, 2, 89, 90, 108], "run": [0, 1, 2, 8, 30, 69, 70, 72, 76, 89, 90, 100, 102, 108], "download": [0, 1, 2, 8, 37, 41, 48, 49, 51, 91, 108], "api": [1, 2, 36, 37, 41, 48, 49, 51, 62, 68, 69, 70, 72, 76, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108], "improved_diffusion_lib": [1, 2, 3, 5], "avatar_api": [1, 2, 3, 5], "draw_text_api": [1, 2, 3, 5], "improved_diffusion_api": [1, 2, 3, 5], "nearest_image_api": [1, 2, 3, 5], "stable_diffusion_api": [1, 2, 3, 5], "llm_augpe_api": [1, 2, 3, 14], "random_api": [1, 2, 3, 4, 5, 7, 8, 13, 93, 107], "variation_api": [1, 2, 3, 4, 5, 7, 8, 13, 93, 107], "compute_fid": [1, 2, 17, 19], "compute_precision_recal": [1, 2, 17, 19], "dpimagebench_lib": [1, 2, 17, 23, 24], "dpimagebench_classify_imag": [1, 2, 17, 23], "sample_imag": [1, 2, 17, 23], "save_all_imag": [1, 2, 17, 23], "save_text_to_csv": [1, 2, 17, 33], "text_csv": [1, 2, 37, 47], "fld_incept": [1, 2, 55, 57], "sentence_transform": [1, 2, 55, 60], "auto": [1, 2, 62, 64, 68], "faiss": [1, 2, 62, 64, 65, 68, 104, 108], "sklearn": [1, 2, 62, 64, 65, 68, 105], "register_fastchat": [1, 2, 69, 71, 72], "gaussian_diffus": [2, 3, 5, 9], "unet": [2, 3, 5, 9], "drawtext": [2, 3, 5, 7], "_create_imag": [2, 3, 5, 7], "_get_random_imag": [2, 3, 5, 7], "_get_variation_imag": [2, 3, 5, 7], "improveddiffus": [2, 3, 5, 8, 93], "improveddiffusion270m": [2, 3, 5, 8], "checkpoint_url": [2, 3, 5, 8], "sampler": [2, 3, 5, 8], "forward": [2, 3, 5, 8, 17, 23, 25, 30], "train": [2, 3, 5, 8, 17, 23, 24, 25, 30, 37, 40, 42, 43, 46, 48, 49, 51, 103, 106], "sampl": [2, 3, 4, 5, 7, 8, 10, 13, 17, 20, 21, 31, 36, 37, 38, 50, 55, 56, 62, 63, 68, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 100, 101, 107], "stablediffus": [2, 3, 5, 13, 93], "densenet": [2, 17, 23, 25], "ema": [2, 17, 23, 24, 25], "resnet": [2, 17, 23, 24, 25, 26], "resnext": [2, 17, 23, 24, 25], "wrn": [2, 17, 23, 24, 25], "target_transform": [2, 37, 39, 42], "imagedataset": [2, 37, 39, 45], "_list_image_files_recurs": [2, 37, 39, 45], "downloadinfo": [2, 37, 47, 48, 49, 51], "to_uint8": [2, 55, 57, 58, 59], "search": [2, 54, 62, 64, 65, 66, 67, 105], "gpt2": [2, 69, 71, 72, 73], "create_gaussian_diffus": [3, 5, 9, 10], "create_model": [3, 5, 9, 11], "class": [4, 7, 8, 13, 16, 17, 18, 20, 21, 22, 24, 27, 30, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 68, 69, 70, 72, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 93, 94, 95, 100, 107], "sourc": [4, 7, 8, 10, 11, 13, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 106, 108], "base": [4, 7, 8, 13, 16, 17, 18, 20, 21, 22, 24, 27, 30, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 95, 100, 103, 106], "abc": [4, 17, 18, 52, 53, 55, 56, 62, 63, 69, 75, 78, 82, 86, 88], "The": [4, 7, 8, 13, 17, 18, 20, 21, 22, 24, 27, 31, 32, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 104, 106, 107, 108], "abstract": [4, 17, 18, 52, 53, 55, 56, 62, 63, 69, 75, 78, 82, 86, 88, 100], "defin": [4, 8, 17, 18, 29, 30], "synthet": [4, 7, 8, 13, 17, 18, 20, 21, 22, 24, 31, 32, 34, 36, 37, 38, 48, 49, 51, 52, 53, 54, 62, 63, 65, 66, 67, 68, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 100, 101, 103, 106], "gener": [4, 7, 8, 13, 17, 18, 36, 37, 38, 62, 68, 69, 70, 72, 75, 76, 77, 86, 87, 88, 93, 95, 99, 100, 101, 103, 104, 106, 108], "label_info": [4, 7, 8, 13, 86, 87, 88, 95], "num_sampl": [4, 7, 8, 13, 37, 38, 50, 86, 87, 88, 89, 90], "method": [4, 27, 93, 97, 98, 99, 101, 102, 106, 107], "random": [4, 7, 8, 13, 37, 38, 86, 87], "paramet": [4, 7, 8, 11, 13, 17, 18, 20, 21, 22, 24, 27, 31, 32, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 107], "omegaconf": [4, 7, 8, 13, 86, 87, 88, 95], "dictconfig": [4, 7, 8, 13, 86, 87, 88], "info": [4, 7, 8, 13, 84, 86, 87, 88], "label": [4, 7, 8, 13, 17, 24, 36, 37, 38, 42, 50, 86, 87, 88, 89, 90, 95], "int": [4, 7, 8, 13, 17, 21, 22, 24, 31, 34, 37, 38, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 72, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "number": [4, 7, 8, 13, 17, 21, 22, 24, 27, 31, 34, 37, 38, 44, 45, 48, 49, 50, 51, 52, 53, 54, 62, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 95, 99], "syn_data": [4, 7, 8, 13, 17, 18, 20, 21, 22, 24, 31, 32, 34, 52, 53, 54, 62, 63, 68, 86, 87, 88, 89, 90], "variat": [4, 7, 8, 13, 36, 62, 68, 86, 87, 93, 100], "object": [4, 7, 8, 13, 16, 17, 18, 24, 27, 31, 32, 34, 37, 38, 42, 55, 58, 59, 61, 62, 68, 85, 86, 87, 89, 90, 95, 100, 107], "font_root_path": 7, "font_variation_degre": 7, "font_size_variation_degre": 7, "rotation_degree_variation_degre": 7, "stroke_width_variation_degre": 7, "text_list": 7, "0": [7, 8, 17, 24, 30, 37, 38, 48, 49, 51, 54, 62, 68, 69, 77, 86, 87, 95, 105], "1": [7, 8, 17, 24, 37, 44, 45, 48, 49, 51, 54, 62, 68, 69, 70, 76, 77, 78, 79, 81, 86, 87, 95, 100, 103, 105, 106], "2": [7, 17, 24, 37, 48, 49, 51, 74, 103, 106], "3": [7, 8, 30, 103, 106], "4": [7, 8, 13, 17, 21, 30, 106], "5": [7, 13, 17, 21, 84], "6": 7, "7": [7, 13], "8": [7, 8, 105], "9": 7, "width": [7, 13], "28": 7, "height": [7, 13], "background_color": 7, "text_color": 7, "255": 7, "font_size_list": 7, "rang": 7, "10": [7, 13, 17, 30, 31, 37, 45], "30": 7, "stroke_width_list": 7, "rotation_degree_list": 7, "31": 7, "us": [7, 8, 13, 17, 21, 22, 24, 27, 32, 34, 36, 37, 38, 42, 44, 45, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 76, 78, 79, 80, 81, 83, 84, 89, 90, 93, 94, 96, 98, 99, 100, 103, 104, 105, 106, 108], "pil": 7, "librari": [7, 55, 58, 69, 72, 98, 103, 104, 107, 108], "them": [7, 8, 30, 95, 106], "constructor": [7, 8, 13, 17, 20, 21, 22, 24, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 55, 58, 59, 61, 62, 68, 69, 70, 72, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 95, 107], "str": [7, 8, 13, 17, 22, 24, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 59, 61, 62, 65, 66, 67, 68, 69, 70, 72, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 92], "root": [7, 37, 40, 41, 42, 44, 45, 48, 49, 51], "path": [7, 8, 13, 17, 22, 32, 34, 37, 38, 44, 45, 48, 49, 50, 51, 69, 72, 78, 79, 80, 83, 84, 89, 90], "contain": [7, 10, 11, 13, 37, 38, 45, 50, 55, 58, 59, 61, 86, 87], "font": 7, "file": [7, 13, 17, 34, 37, 41, 45, 50, 78, 79, 80, 81, 83, 84, 85, 94, 95, 100, 107], "ttf": 7, "format": [7, 17, 22, 32, 34, 37, 45, 50, 78, 79, 80, 83, 84], "float": [7, 13, 17, 24, 52, 53, 54, 78, 79, 85, 86, 87, 89, 90, 94], "list": [7, 8, 13, 17, 20, 21, 24, 31, 37, 38, 45, 50, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 89, 90, 94, 95, 100, 106], "degre": [7, 8, 13, 62, 68], "each": [7, 8, 13, 17, 18, 20, 21, 22, 24, 31, 32, 34, 37, 38, 62, 63, 68, 69, 70, 76, 89, 90, 94, 95, 99, 100, 101], "iter": [7, 8, 13, 17, 18, 20, 21, 22, 24, 27, 31, 32, 34, 36, 52, 53, 54, 78, 79, 80, 81, 82, 83, 89, 90, 93, 94, 95, 100, 101], "If": [7, 8, 13, 17, 24, 37, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 58, 62, 65, 66, 67, 68, 69, 70, 72, 76, 86, 87, 89, 90, 95, 105, 106], "singl": [7, 8, 13, 78, 80, 85], "i": [7, 8, 11, 13, 17, 18, 20, 21, 22, 24, 31, 32, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 62, 63, 65, 66, 67, 68, 69, 70, 72, 76, 86, 87, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 104, 107, 108], "provid": [7, 8, 13, 62, 68, 69, 70, 100, 104, 107, 108], "same": [7, 8, 13, 27, 37, 38, 45, 69, 70, 89, 90], "all": [7, 8, 13, 17, 30, 32, 37, 45, 50, 62, 68, 69, 70, 94, 100, 106], "mean": [7, 17, 20, 21, 37, 38, 86, 87], "probabl": 7, "chang": 7, "size": [7, 8, 13, 17, 24, 37, 44, 45, 55, 59, 61, 69, 72], "maximum": [7, 54, 69, 70], "possibl": 7, "rotat": 7, "stroke": 7, "dict": [7, 13, 17, 20, 21, 37, 38, 69, 70, 72, 75, 76, 77], "option": [7, 8, 13, 17, 20, 21, 22, 24, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 62, 68, 69, 70, 72, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 100, 105], "It": [7, 13, 37, 40, 43, 46, 48, 49, 51, 62, 65, 66, 67, 68, 86, 87, 93, 94, 97, 98, 99, 100, 101, 102, 106], "can": [7, 13, 17, 18, 37, 45, 69, 70, 76, 94, 95, 100, 105, 106, 107], "dictionari": [7, 13, 69, 75, 95, 107], "map": [7, 13, 69, 70, 72, 75], "label_nam": [7, 17, 32], "string": [7, 13, 37, 45, 78, 79, 80, 83], "default": [7, 8, 13, 17, 20, 21, 22, 24, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 62, 68, 69, 70, 72, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 105], "tupl": [7, 17, 24, 62, 65, 66, 67, 68], "background": 7, "color": 7, "feasibl": 7, "set": [7, 27, 37, 38, 52, 53, 54, 69, 70, 72, 76, 97, 100, 103], "font_siz": 7, "font_fil": 7, "stroke_width": 7, "rotation_degre": 7, "creat": [7, 29, 93, 95, 107], "an": [7, 17, 32, 37, 44, 65, 69, 72, 85, 93, 99, 100, 106, 107], "return": [7, 8, 13, 17, 20, 21, 22, 24, 31, 34, 37, 38, 44, 45, 52, 54, 55, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 72, 75, 76, 78, 79, 80, 83, 85, 86, 87, 89, 90, 94, 100], "type": [7, 8, 13, 17, 20, 21, 22, 24, 31, 34, 37, 38, 44, 45, 48, 49, 51, 52, 54, 55, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 72, 75, 76, 78, 79, 80, 83, 85, 86, 87, 89, 90, 106], "np": [7, 17, 24, 37, 44, 62, 65, 66, 67, 68, 89, 90], "ndarrai": [7, 17, 24, 37, 44, 62, 65, 66, 67, 68, 89, 90], "get": [7, 17, 22, 24, 34, 54, 69, 70, 72, 75, 76, 78, 79, 80, 83, 85, 89, 90, 108], "its": [7, 13, 95], "avatar": [7, 103], "input": [7, 8, 13, 94], "variation_degre": [8, 13], "model_path": 8, "model_image_s": 8, "64": [8, 37, 40], "num_channel": [8, 11], "192": 8, "num_res_block": [8, 11], "learn_sigma": [8, 10, 11], "true": [8, 17, 27, 32, 37, 45, 69, 70, 76, 84, 89, 90], "class_cond": [8, 11, 37, 45], "use_checkpoint": [8, 11], "fals": [8, 10, 37, 45, 69, 70, 72, 76, 86, 87], "attention_resolut": [8, 11], "16": 8, "num_head": [8, 11], "num_heads_upsampl": [8, 11], "use_scale_shift_norm": [8, 11], "dropout": [8, 11], "diffusion_step": 8, "4000": 8, "sigma_smal": [8, 10], "noise_schedul": [8, 10], "cosin": [8, 62, 65, 66, 67, 68], "use_kl": [8, 10], "predict_xstart": [8, 10], "rescale_timestep": [8, 10], "rescale_learned_sigma": [8, 10], "timestep_respac": [8, 10], "100": 8, "batch_siz": [8, 17, 24, 37, 45, 55, 59, 61, 69, 72], "2000": [8, 55, 59, 61], "use_ddim": 8, "clip_denois": 8, "use_data_parallel": 8, "improv": [8, 10, 11, 45, 93], "diffus": [8, 10, 11, 13, 45, 93, 100, 103, 106], "model": [8, 13, 17, 24, 26, 27, 28, 29, 36, 37, 48, 49, 51, 55, 61, 69, 72, 74, 75, 93, 98, 100, 103, 106], "from": [8, 10, 11, 17, 24, 26, 27, 28, 29, 30, 31, 36, 37, 38, 41, 42, 45, 50, 62, 68, 69, 70, 72, 75, 76, 86, 87, 92, 93, 94, 95, 101, 103, 106, 107], "http": [8, 10, 11, 17, 21, 24, 26, 27, 28, 29, 30, 37, 41, 42, 44, 45, 48, 49, 51, 62, 68, 69, 70, 72, 76, 92, 101, 105, 106, 108], "arxiv": [8, 17, 21, 29, 37, 48, 49, 51, 106], "org": [8, 17, 21, 37, 48, 49, 51], "ab": [8, 17, 21, 37, 48, 49, 51], "2102": 8, "09672": 8, "see": [8, 62, 68, 69, 70, 72, 94, 103, 106], "github": [8, 10, 11, 17, 21, 24, 26, 27, 28, 29, 30, 37, 42, 44, 45, 69, 72, 92, 101, 105, 106, 108], "com": [8, 10, 11, 17, 21, 24, 26, 27, 28, 29, 30, 37, 41, 42, 44, 45, 48, 49, 51, 69, 70, 72, 76, 92, 101, 105, 106, 108], "explan": 8, "here": [8, 103, 107], "checkpoint": [8, 13, 17, 22, 37, 38, 89, 90, 94], "total": [8, 89, 90], "step": [8, 10, 13, 17, 24, 27, 54, 100], "configur": [8, 17, 18, 84, 94, 100], "batch": [8, 13, 17, 24, 37, 45, 55, 59, 61, 69, 72], "bool": [8, 17, 30, 32, 37, 38, 45, 69, 70, 72, 76, 84, 86, 87, 89, 90], "whether": [8, 17, 27, 32, 36, 37, 38, 45, 69, 70, 72, 76, 84, 86, 87, 89, 90], "parallel": [8, 37, 44], "dure": 8, "thi": [8, 10, 11, 17, 18, 20, 21, 22, 24, 27, 30, 31, 32, 34, 37, 45, 69, 70, 72, 75, 76, 93, 95, 96, 99, 103, 104, 105, 107, 108], "none": [8, 17, 20, 21, 37, 38, 45, 50, 52, 53, 54, 55, 58, 62, 68, 84, 85, 86, 87, 89, 90], "openaipubl": 8, "blob": [8, 10, 11, 26, 27, 28, 29, 30, 42, 45, 69, 72], "core": [8, 96, 104, 105, 108], "window": 8, "net": 8, "march": 8, "2021": 8, "imagenet64_cond_270m_250k": 8, "pt": 8, "condit": [8, 37, 45], "imagenet": [8, 103], "270m": 8, "250k": 8, "paper": [8, 37, 48, 49, 51, 101, 103, 106, 107], "A": [8, 17, 31, 32, 37, 38, 69, 70, 72, 75, 76, 95, 106], "wrapper": [8, 69, 70, 72, 76], "around": 8, "handl": 8, "entir": 8, "process": [8, 10, 27, 36, 37, 44, 48, 51, 86, 87, 105], "so": [8, 89, 90], "reduc": 8, "communi": 8, "round": 8, "between": [8, 17, 20, 21, 94], "gpu": [8, 62, 68, 105], "when": [8, 17, 27, 32, 37, 38, 62, 68, 69, 70, 72, 76, 85, 89, 90, 93, 95, 98, 100, 106], "dataparallel": [8, 11], "model_kwarg": 8, "start_t": [8, 10], "start_imag": [8, 10], "nois": [8, 52, 53, 54, 89, 90, 97, 100], "image_s": [8, 11, 37, 45], "comput": [8, 17, 20, 21, 24, 27, 30, 54, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 94, 98, 99, 100, 103, 105, 106], "perform": [8, 30], "everi": [8, 27, 30], "call": [8, 11, 17, 18, 20, 21, 22, 24, 27, 30, 31, 32, 34, 69, 70, 72, 76, 94, 100, 102, 106], "should": [8, 13, 30, 37, 40, 43, 46, 48, 49, 51, 52, 53, 54, 62, 65, 66, 67, 68, 86, 87], "overridden": [8, 30], "subclass": [8, 30], "although": [8, 30], "recip": [8, 30], "pass": [8, 30, 69, 70, 72, 76, 94, 95, 100, 107], "need": [8, 30, 69, 70, 93, 95, 100, 106, 107], "within": [8, 30], "function": [8, 17, 18, 20, 21, 22, 24, 30, 31, 32, 34, 69, 70, 72, 76], "one": [8, 30, 62, 65, 66, 67, 68, 69, 70, 76, 86, 87, 89, 90, 100], "instanc": [8, 30, 93], "afterward": [8, 30], "instead": [8, 30, 103, 105, 106], "sinc": [8, 30, 100], "former": [8, 27, 30], "take": [8, 30], "care": [8, 30], "regist": [8, 30, 69, 71, 72, 73, 74], "hook": [8, 30], "while": [8, 30, 106], "latter": [8, 30], "silent": [8, 30], "ignor": [8, 30, 37, 45], "devic": [8, 55, 59], "code": [10, 11, 106, 108], "minor": [10, 11], "edit": [10, 11, 104, 108], "origin": [10, 11, 27, 62, 68, 106], "main": [10, 11, 17, 21, 26, 27, 28, 29, 30, 42, 45, 69, 72, 102, 104, 108], "improved_diffus": [10, 11, 45], "py": [10, 11, 26, 27, 28, 29, 30, 42, 45, 69, 72], "script_util": [10, 11], "support": [10, 11, 62, 65, 68, 86, 87, 100, 101], "middl": 10, "argument": [10, 69, 70, 72, 75, 76, 77], "1000": [10, 37, 44, 45], "linear": 10, "avoid": 11, "self": 11, "input_block": 11, "which": [11, 69, 70, 89, 90, 94, 95, 97, 100, 106], "prompt": [13, 36, 69, 72], "512": [13, 37, 41], "random_api_checkpoint": 13, "compvi": 13, "stabl": [13, 93, 100, 103, 106], "v1": [13, 37, 41], "random_api_guidance_scal": 13, "random_api_num_inference_step": 13, "50": [13, 17, 24, 37, 44], "random_api_batch_s": 13, "variation_api_checkpoint": 13, "variation_api_guidance_scal": 13, "variation_api_num_inference_step": 13, "variation_api_batch_s": 13, "either": [13, 37, 40, 43, 46, 48, 49, 51, 52, 53, 69, 70], "json": 13, "guidanc": 13, "scale": [13, 54], "infer": [13, 106], "rais": [13, 17, 24, 37, 38, 40, 43, 44, 46, 48, 49, 50, 51, 52, 54, 62, 65, 66, 67, 68, 69, 70, 72, 76, 86, 87, 89, 90], "valueerror": [13, 17, 24, 37, 38, 40, 43, 44, 46, 48, 49, 50, 51, 52, 54, 62, 65, 66, 67, 68, 69, 70, 72, 76, 86, 87, 89, 90], "neither": 13, "nor": 13, "These": [17, 18, 103], "after": [17, 18, 20, 21, 22, 24, 27, 31, 32, 34, 94], "priv_data": [17, 20, 21, 62, 63, 68, 89, 90], "filter_criterion": [17, 20, 21], "frechet": [17, 20], "distanc": [17, 20, 62, 65, 66, 67, 68], "fid": [17, 20, 21, 94, 100], "privat": [17, 20, 21, 37, 38, 48, 49, 51, 62, 63, 65, 66, 67, 68, 86, 87, 89, 90, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107], "onli": [17, 20, 21, 101, 106, 107], "metric": [17, 20, 21, 24, 31, 62, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 85, 89, 90, 94, 100], "satisfi": [17, 20, 21], "criterion": [17, 20, 21, 24], "num_precision_neighbor": [17, 21], "num_recall_neighbor": [17, 21], "precis": [17, 21, 100], "recal": [17, 21, 100], "1904": [17, 21], "06991": [17, 21], "neighbor": [17, 21, 36, 62, 65, 66, 67, 68, 99, 105], "follow": [17, 21, 24, 62, 65, 66, 67, 68, 69, 70, 72, 76, 86, 87, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106], "marcojira": [17, 21], "fld": [17, 21, 55, 58], "tree": [17, 21], "model_nam": [17, 24], "test_data": [17, 24], "val_data": [17, 24], "256": [17, 24], "num_epoch": [17, 24], "n_split": [17, 24], "lr": [17, 24], "01": [17, 24], "lr_scheduler_step_s": [17, 24], "20": [17, 24, 84], "lr_scheduler_gamma": [17, 24], "ema_r": [17, 24], "9999": [17, 24], "model_param": [17, 24], "classif": [17, 24], "accuraci": [17, 24], "dpimagebench": [17, 24, 26, 27, 28, 29, 30, 42], "2019chengong": [17, 24], "downstream": [17, 24, 106], "test": [17, 24, 37, 40, 43, 46, 48, 49, 51], "valid": [17, 24, 27], "epoch": [17, 24], "split": [17, 24, 37, 38, 40, 42, 43, 46, 48, 49, 51], "gradient": [17, 24], "accumul": [17, 24], "learn": [17, 24, 62, 68, 69, 70], "rate": [17, 24], "schedul": [17, 24, 89, 90], "gamma": [17, 24], "exponenti": [17, 24, 27], "move": [17, 24, 27], "averag": [17, 24, 27, 62, 68], "loader": [17, 24], "torch": [17, 24, 27, 28], "dataload": [17, 24], "unknown": [17, 24, 37, 48, 49, 51, 62, 65, 66, 67, 68], "nn": [17, 24, 27], "data_load": [17, 24], "exponentialmovingaverag": [17, 23, 24, 25, 27], "loss": [17, 24], "num_images_per_class": [17, 31], "item": [17, 31, 78, 79, 80, 83, 85], "per": [17, 31, 85, 89, 90], "output_fold": [17, 22, 32, 34, 78, 79, 80, 83], "path_format": [17, 32], "09d": [17, 22, 32, 34, 78, 80, 83], "label_id": [17, 32, 36, 37, 38], "_": [17, 32, 37, 45], "index": [17, 32, 36], "png": [17, 32, 37, 45], "tqdm_enabl": [17, 32], "save": [17, 22, 27, 32, 34, 37, 38, 40, 41, 62, 68, 78, 79, 80, 83, 85, 89, 90, 94, 98, 100], "output": [17, 22, 32, 34, 78, 79, 80, 83, 100], "folder": [17, 22, 32, 34, 37, 38, 45, 62, 68, 78, 79, 80, 83], "show": [17, 32, 69, 70, 76, 103], "tqdm": [17, 32], "progress": [17, 32, 69, 70, 76, 94], "bar": [17, 32, 69, 70, 76], "helper": [17, 32], "iteration_format": [17, 22, 34, 78, 80, 83], "csv": [17, 34, 37, 48, 49, 50, 51, 78, 79, 94, 95, 107], "part": [17, 34, 95, 100], "copy_to": [17, 23, 25, 27], "load_state_dict": [17, 23, 25, 27], "restor": [17, 23, 25, 27], "state_dict": [17, 23, 25, 27], "store": [17, 23, 25, 27, 52, 54], "updat": [17, 23, 25, 27], "basicblock": [17, 23, 25, 30], "networkblock": [17, 23, 25, 30], "wideresnet": [17, 23, 25, 30], "adapt": [26, 27, 28, 29, 30, 45, 74], "fjxmlzn": [26, 27, 28, 29, 30, 37, 41, 42, 101, 106], "classifi": [26, 28, 29, 30], "kwarg": [26, 28, 29, 37, 48, 49, 51, 85], "construct": [26, 28, 29, 62, 68, 93], "decai": 27, "use_num_upd": 27, "maintain": 27, "usual": 27, "result": [27, 94, 100], "copi": 27, "current": [27, 36, 37, 38, 69, 70, 76, 93, 94, 97, 98, 99, 101], "given": [27, 89, 90, 93, 100, 106], "collect": 27, "without": [27, 37, 45, 106], "affect": 27, "optim": 27, "befor": [27, 37, 45, 55, 58, 59, 102], "later": [27, 69, 75], "temporarili": 27, "time": [27, 62, 68, 99], "ar": [27, 37, 38, 52, 54, 62, 68, 69, 70, 72, 76, 89, 90, 93, 94, 95, 97, 98, 99, 100, 103, 105, 106, 107], "cifar": 28, "dataset": [28, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 96, 103, 104, 106, 107, 108], "port": 28, "form": [28, 94], "facebook": 28, "fb": 28, "pytorch": [28, 29, 105], "vision": 28, "master": [28, 29], "torchvis": 28, "c": [28, 105], "yang": 28, "wei": 28, "xie": [29, 106], "": [29, 84, 99], "girshick": 29, "r": [29, 37, 49], "dollar": 29, "p": [29, 84], "tu": 29, "z": 29, "he": 29, "k": [29, 95], "2016": 29, "aggreg": 29, "residu": 29, "transform": [29, 45, 55, 61, 98], "deep": 29, "neural": [29, 106], "network": [29, 106], "preprint": [29, 106], "1611": 29, "05431": 29, "import": 29, "prlz77": 29, "in_plan": 30, "out_plan": 30, "stride": 30, "droprat": 30, "x": [30, 58, 59, 69, 70], "nb_layer": 30, "block": 30, "in_c": 30, "img_siz": 30, "32": [30, 37, 42, 44], "num_class": 30, "depth": 30, "40": 30, "widen_factor": 30, "clean_histogram": 36, "column": [36, 37, 50, 52, 54, 55, 56, 61, 62, 68, 86, 87, 95, 98], "clean": [36, 78, 79, 82, 85, 89, 90], "dp_histogram": 36, "from_last_flag": 36, "flag": 36, "indic": [36, 62, 63, 65, 66, 67], "last": 36, "voting_id": 36, "nearest": [36, 62, 65, 66, 67, 68, 99, 105], "vote": [36, 62, 68], "id": [36, 37, 38, 49, 51, 62, 68, 69, 70, 89, 90, 95], "image_model_label": 36, "image_prompt": 36, "messag": [36, 69, 70, 72, 76, 77, 84], "lookahead_embed": 36, "lookahead": [36, 62, 68, 100], "parent_syn_data_index": 36, "previou": 36, "post_processed_dp_histogram": 36, "post": [36, 86, 87], "e": [36, 86, 87, 95, 100, 105, 106], "g": [36, 86, 87, 95, 100, 106], "clip": [36, 86, 87], "variation_api_fold_id": 36, "fold": 36, "root_dir": [37, 40, 41, 42, 44, 48, 49, 51], "re": [37, 40, 41, 42, 44, 55, 58, 59], "val": [37, 40, 48, 49, 51], "directori": [37, 40, 41, 42, 44, 45, 48, 49, 51, 95, 107], "resolut": [37, 40, 41, 42, 44, 55, 58, 59], "invalid": [37, 40, 43, 46, 69, 72], "www": [37, 41], "kaggl": [37, 41], "cooki": [37, 41], "doudou": [37, 41], "doe": [37, 41, 50, 89, 90, 100, 106], "exist": [37, 41, 50, 101], "read": [37, 41, 44], "zip": [37, 41], "attr_nam": [37, 42], "male": [37, 42], "attribut": [37, 42, 95, 98], "data_fram": [37, 38, 95, 98, 107], "metadata": [37, 38, 95, 107], "hold": [37, 38, 95, 100, 107], "panda": [37, 38, 95, 107], "datafram": [37, 38, 95, 107], "classmethod": [37, 38], "data_list": [37, 38], "concaten": [37, 38], "frame": [37, 38, 55, 56, 61], "must": [37, 38, 45, 69, 70, 95], "filter_criteria": [37, 38], "accord": [37, 38, 86, 87], "criteria": [37, 38], "load": [37, 38, 45, 50, 89, 90, 95, 107], "successfulli": [37, 38], "anoth": [37, 38], "num_samples_list": [37, 38], "seed": [37, 38], "randomli": [37, 38, 93, 100], "multipl": [37, 38, 69, 70, 76, 100, 105], "sum": [37, 38], "equal": [37, 38, 69, 70, 95], "splite": [37, 38], "certain": [37, 38], "new": [37, 38, 100, 101, 106, 107], "empti": [37, 38, 69, 72], "num_process": [37, 44], "chunksiz": [37, 44], "microsoft": [37, 44, 69, 70, 72, 105, 106, 108], "chunk": [37, 44], "219": [37, 44], "995": [37, 44], "icml": [37, 48, 49, 51, 103], "2024": [37, 48, 49, 51, 103, 106], "spotlight": [37, 48, 49, 51, 103], "differenti": [37, 48, 49, 51, 52, 53, 54, 96, 100, 103, 104, 106, 108], "via": [37, 48, 49, 51, 103, 106], "foundat": [37, 48, 49, 51, 93, 100, 103, 106], "2403": [37, 48, 49, 51, 106], "01749": [37, 48, 49, 51, 106], "raw": [37, 48, 49, 51], "githubusercont": [37, 48, 49, 51], "ai": [37, 48, 49, 51, 62, 68, 69, 70], "secur": [37, 48, 49, 51], "aug": [37, 48, 49, 51, 100], "bca21c90921bd1151aa7627e676c906165e205a0": [37, 48, 49, 51], "iclr23_reviews_test": [37, 48], "direct": [37, 48, 49, 51], "iclr23_reviews_train": [37, 48], "iclr23_reviews_v": [37, 48], "inform": [37, 48, 49, 51, 69, 70, 84, 95, 105, 106], "automat": [37, 48, 49, 51], "download_info": [37, 48, 49, 51], "data_path": [37, 48, 49, 51], "processed_data_path": [37, 48, 51], "drive": [37, 49, 51], "googl": [37, 49, 51], "uc": [37, 49, 51], "12": [37, 49], "zv93mqnpvm_oruoahz2n4odkkoxd": [37, 49], "gdown": [37, 49, 51], "dev": [37, 49, 51], "csv_path": [37, 50], "label_column": [37, 50], "text_column": [37, 50], "1eplubxck5mgnm1giiflctcr": [37, 51], "tkgjcrc2": [37, 51], "num_imag": [37, 45], "num_work": [37, 45], "nest": [37, 45, 95, 107], "arbitrarili": [37, 45], "class_nam": [37, 45], "suffix": [37, 45], "ani": [37, 45, 94, 95, 106], "ext": [37, 45], "jpg": [37, 45], "jpeg": [37, 45], "gif": [37, 45], "extract": [37, 45], "first": [37, 45, 89, 90], "treat": [37, 45], "resiz": [37, 45, 55, 58, 59], "worker": [37, 45], "attr_index": 42, "preprocess_dataset": 42, "data_dir": 45, "recurs": 45, "image_dataset": 45, "namedtupl": [48, 49, 51, 69, 77], "field": [48, 49, 51, 69, 77], "alia": [48, 49, 51, 69, 77], "privaci": [52, 53, 54, 96, 100, 104, 106, 108], "mechan": [52, 53, 54, 89, 90, 96, 104, 108], "add": [52, 53, 54, 93, 97, 100], "num_iter": [52, 53, 54], "epsilon": [52, 53, 54, 89, 90], "delta": [52, 53, 54, 89, 90], "noise_multipli": [52, 53, 54, 89, 90], "multipli": [52, 53, 54, 89, 90], "have": [52, 54, 89, 90, 95], "ad": [52, 54, 96, 100, 104, 108], "noisi": [52, 54, 100], "both": [52, 54], "num_step": 54, "max_epsilon": 54, "10000000": 54, "1e7": 54, "ep": 54, "mu": 54, "shift": 54, "equival": 54, "min_noise_multipli": 54, "max_noise_multipli": 54, "500": 54, "minimum": 54, "1e": 54, "properti": [55, 56, 61, 69, 70, 72, 75, 85], "computed_data": [55, 56], "cuda": [55, 59], "sentenc": [55, 61, 98], "min": [58, 59], "max": [58, 59], "over": [62, 63, 99, 100], "how": [62, 63, 69, 70, 100, 103, 105, 107], "good": [62, 63], "term": [62, 63], "close": [62, 63], "mode": [62, 65, 66, 67, 68, 86, 87, 104, 108], "lookahead_degre": [62, 68], "lookahead_log_fold": [62, 68], "voting_details_log_fold": [62, 68], "num_nearest_neighbor": [62, 65, 66, 67, 68], "backend": [62, 65, 68], "closest": [62, 68], "l2": [62, 65, 66, 67, 68], "norm": [62, 68], "normal": [62, 68, 89, 90, 106], "find": [62, 65, 66, 67, 68], "cos_sim": [62, 65, 66, 67, 68], "similar": [62, 65, 66, 67, 68, 100, 106], "ip": [62, 65, 66, 68], "inner": [62, 65, 66, 68], "product": [62, 65, 66, 68, 106], "Not": [62, 68], "greater": [62, 68], "than": [62, 68], "detail": [62, 68, 104, 107, 108], "consid": [62, 68], "scikit": [62, 68], "avail": [62, 68, 69, 72, 96, 104, 106, 108], "otherwis": [62, 68], "much": [62, 68], "faster": [62, 68, 105], "larg": [62, 68, 69, 75], "requir": [62, 68, 69, 70, 76, 93, 105, 106], "instal": [62, 65, 68, 104, 108], "cpu": [62, 68], "lookahead_id": [62, 68], "possibli": [62, 68], "addit": [62, 68, 95, 100], "syn_embed": [65, 66, 67], "priv_embed": [65, 66, 67], "error": 65, "occur": 65, "fall": 65, "back": 65, "progress_bar": [69, 70, 76], "dry_run": [69, 70, 72, 76], "num_thread": [69, 70, 76], "generation_arg": [69, 70, 72, 75, 76, 77], "azur": [69, 70, 93], "environ": [69, 70, 76], "variabl": [69, 70, 76], "azure_openai_api_kei": [69, 70], "kei": [69, 70, 76, 93, 95, 97, 98, 99, 101, 102, 104, 108], "you": [69, 70, 76, 93, 95, 105, 106, 107], "portal": [69, 70], "separ": [69, 70, 76], "comma": [69, 70, 76], "also": [69, 70, 100, 105, 106, 107], "az_cli": [69, 70], "case": [69, 70, 89, 90, 106], "cli": [69, 70], "authent": [69, 70], "azure_openai_api_scop": [69, 70], "document": [69, 70, 107], "more": [69, 70, 100, 106, 107], "en": [69, 70], "u": [69, 70], "servic": [69, 70], "switch": [69, 70], "endpoint": [69, 70], "entra": [69, 70], "azure_openai_api_endpoint": [69, 70], "azure_openai_api_vers": [69, 70], "version": [69, 70], "assum": [69, 70, 89, 90], "x_1": [69, 70], "x_2": [69, 70], "desir": [69, 70, 72, 94, 100], "For": [69, 70, 94, 95], "x_i": [69, 70], "pair": [69, 70], "lowest": [69, 70, 76], "workload": [69, 70, 76], "enabl": [69, 70, 72, 76], "dry": [69, 70, 72, 76], "respons": [69, 70, 72, 75, 76, 93, 97, 98, 99, 101], "fake": [69, 70, 72, 76], "thread": [69, 70, 76], "make": [69, 70, 76], "concurr": [69, 70, 76], "specif": [69, 70, 72, 75], "max_completion_token": [69, 70, 72], "max_token": [69, 70], "prioriti": [69, 70, 72, 76], "highest": [69, 70, 72, 76], "lowerest": [69, 70, 72, 76], "order": [69, 70, 72, 76], "model_name_or_path": [69, 72], "128": [69, 72], "note": [69, 72], "we": [69, 72, 100, 105], "fastchat": [69, 72, 74], "lm": [69, 72], "sy": [69, 72], "manag": [69, 72, 85, 102], "convers": [69, 72], "templat": [69, 72], "your": [69, 72, 96, 104, 106, 108], "pleas": [69, 72, 105, 106, 107], "link": [69, 72], "exampl": [69, 72, 104, 106, 108], "dpsda": [69, 72, 105, 106, 108], "role": [69, 72], "prompt_list": [69, 72], "max_new_token": [69, 72], "languag": [69, 75], "arg": [69, 75, 85], "ones": [69, 75], "overwrit": [69, 75], "earlier": [69, 75], "openai_api_kei": [69, 76], "platform": [69, 76], "account": [69, 76], "gpt": [74, 100, 106], "path_separ": [78, 79, 80, 83], "float_format": [78, 79], "8f": [78, 79], "flush_iteration_freq": [78, 79], "print": [78, 79, 81, 94, 100], "replac": [78, 79, 80, 83, 100, 106], "point": [78, 79], "frequenc": [78, 79, 81], "flush": [78, 79], "clear": [78, 79], "log_path": [78, 79], "up": [78, 79, 82, 85, 89, 90], "image_path": [78, 80], "log_iteration_freq": [78, 81], "consol": [78, 81, 94, 100], "matplotlib": [78, 83, 85, 94], "figur": [78, 83, 85], "pdf": [78, 83, 94], "warn": 84, "execut": 84, "log_fil": 84, "log_screen": 84, "datefmt": 84, "m": 84, "d": 84, "y": [84, 105], "h": 84, "fmt": 84, "asctim": 84, "levelnam": 84, "level": 84, "setup": 84, "screen": 84, "date": 84, "row": [85, 95], "context": 85, "scope": 85, "histogram_threshold": [86, 87], "initial_variation_api_fold": [86, 87], "next_variation_api_fold": [86, 87], "keep_select": [86, 87], "selection_mod": [86, 87], "algorithm": [86, 87, 89, 90, 93, 96, 99, 102, 104, 106, 108], "evolut": [86, 87, 93, 94, 95, 96, 101, 102, 103, 104, 105, 107], "threshold": [86, 87], "appli": [86, 87, 95, 107], "keep": [86, 87], "select": [86, 87, 100], "proport": [86, 87], "rank": [86, 87], "top": [86, 87], "callabl": [89, 90], "fraction_per_label_id": [89, 90], "fraction": [89, 90], "length": [89, 90, 95], "small": [89, 90], "some": [89, 90, 94, 95, 100, 103, 106, 107], "zero": [89, 90, 95], "checkpoint_path": [89, 90], "num_samples_schedul": [89, 90], "element": [89, 90], "rest": [89, 90, 106], "plu": [89, 90], "fname": 92, "chunk_siz": 92, "1024": 92, "gist": 92, "yanqd0": 92, "c13ed29e29432e3cf3e7c38467f42f51": 92, "refer": [93, 94, 95, 97, 98, 99, 101, 102, 107, 108], "implement": [93, 94, 97, 98, 99, 100, 101, 107], "ha": [93, 95, 97, 98, 99, 100, 101, 102, 106], "llmaugp": 93, "interfac": 93, "open": [93, 106], "To": [93, 95, 105, 107], "inherit": [93, 107], "monitor": 94, "etc": [94, 100, 106], "plot": 94, "through": [94, 95, 100], "wai": [94, 100], "modal": [94, 100, 106], "along": 95, "differ": [95, 100], "compon": [95, 96, 102, 104, 108], "mostli": [95, 100], "commun": [95, 100, 106], "two": [95, 100, 107], "other": [95, 102, 106], "produc": 95, "conveni": 95, "well": [95, 107], "known": [95, 107], "alreadi": [95, 107], "In": [95, 100], "easili": [95, 100, 106, 107], "custom": [95, 100, 107], "includ": [95, 100, 106], "target": 95, "uncondit": 95, "just": 95, "long": 95, "recogn": 95, "insid": 95, "overview": [96, 104, 108], "design": [96, 104, 106, 108], "principl": [96, 104, 108], "own": [96, 104, 106, 108], "budget": 97, "achiev": 97, "project": 99, "space": [99, 100], "workflow": 100, "shown": 100, "abov": [100, 107], "fig": 100, "consist": 100, "refin": 100, "build": 100, "repres": 100, "ensur": [100, 106], "subset": 100, "those": 100, "expect": 100, "final": 100, "easi": [100, 106], "framework": 100, "toward": 100, "goal": 100, "highli": 100, "modular": [100, 106], "extens": [100, 106], "discuss": [100, 102], "whole": 100, "might": 100, "emb": 100, "end": 100, "veri": 100, "intermedi": 100, "want": 100, "upload": 100, "wandb": 100, "noth": 100, "help": 100, "immedi": 100, "algorthm": 101, "experiment": 103, "iclr": 103, "pre": 103, "simul": [103, 106], "render": 103, "graphic": [103, 106], "face": 103, "weak": 103, "rule": 103, "what": [104, 108], "featur": [104, 108], "citat": [104, 108], "pip": [104, 108], "command": 105, "git": 105, "necessari": 105, "depend": 105, "combin": 105, "clone": 105, "cd": 105, "where": [105, 106], "By": 105, "purpos": 105, "howev": 105, "recommend": 105, "conda": 105, "nvidia": 105, "check": 105, "out": 105, "websit": 105, "latest": 105, "short": 106, "ml": 106, "statist": 106, "rigor": 106, "guarante": 106, "impli": 106, "individu": 106, "protect": 106, "particularli": 106, "situat": 106, "sensit": 106, "confidenti": 106, "medic": 106, "record": 106, "financi": 106, "person": 106, "variou": 106, "concern": 106, "share": 106, "parti": 106, "collabor": 106, "research": 106, "non": 106, "pipelin": 106, "inspect": 106, "directli": 106, "easier": 106, "debug": 106, "develop": 106, "compar": 106, "altern": 106, "No": 106, "synthesi": 106, "tool": 106, "therefor": 106, "leverag": 106, "state": 106, "art": 106, "black": 106, "box": 106, "llama": 106, "even": 106, "third": 106, "assur": 106, "still": 106, "queri": 106, "made": 106, "work": 106, "across": 106, "come": 106, "soon": 106, "could": 106, "match": 106, "beat": 106, "sota": 106, "qualiti": 106, "though": 106, "offici": 106, "python": 106, "allow": 106, "flexibl": 106, "sever": 106, "popular": [106, 107], "extend": 106, "cite": 106, "articl": 106, "pe1": 106, "titl": 106, "author": 106, "lin": 106, "zinan": 106, "gopi": 106, "sivakanth": 106, "kulkarni": 106, "janardhan": 106, "nori": 106, "harsha": 106, "yekhanin": 106, "sergei": 106, "journal": 106, "2305": 106, "15560": 106, "year": 106, "2023": 106, "pe2": 106, "chulin": 106, "backur": 106, "artur": 106, "yu": 106, "da": 106, "inan": 106, "huseyin": 106, "jiang": 106, "haotian": 106, "zhang": 106, "huishuai": 106, "lee": 106, "yin": 106, "tat": 106, "pe3": 106, "baltrusa": 106, "tada": 106, "2502": 106, "05505": 106, "2025": 106, "full": 106, "repositori": 106, "done": 106, "domain": 107, "applic": 107, "most": 107, "like": 107, "preload": 107, "bring": 107, "do": 107, "beyond": 107, "prior": 107, "start": 108}, "objects": {"": [[2, 0, 0, "-", "pe"]], "pe.api": [[4, 0, 0, "-", "api"], [16, 0, 0, "-", "util"]], "pe.api.api": [[4, 1, 1, "", "API"]], "pe.api.api.API": [[4, 2, 1, "", "random_api"], [4, 2, 1, "", "variation_api"]], "pe.api.image": [[7, 0, 0, "-", "draw_text_api"], [8, 0, 0, "-", "improved_diffusion_api"], [9, 0, 0, "-", "improved_diffusion_lib"], [13, 0, 0, "-", "stable_diffusion_api"]], "pe.api.image.draw_text_api": [[7, 1, 1, "", "DrawText"]], "pe.api.image.draw_text_api.DrawText": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "_create_image"], [7, 2, 1, "", "_get_random_image"], [7, 2, 1, "", "_get_variation_image"], [7, 2, 1, "", "random_api"], [7, 2, 1, "", "variation_api"]], "pe.api.image.improved_diffusion_api": [[8, 1, 1, "", "ImprovedDiffusion"], [8, 1, 1, "", "ImprovedDiffusion270M"], [8, 1, 1, "", "Sampler"], [8, 4, 1, "", "sample"]], "pe.api.image.improved_diffusion_api.ImprovedDiffusion": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "random_api"], [8, 2, 1, "", "variation_api"]], "pe.api.image.improved_diffusion_api.ImprovedDiffusion270M": [[8, 3, 1, "", "CHECKPOINT_URL"], [8, 2, 1, "", "__init__"]], "pe.api.image.improved_diffusion_api.Sampler": [[8, 2, 1, "", "forward"], [8, 3, 1, "", "training"]], "pe.api.image.improved_diffusion_lib": [[10, 0, 0, "-", "gaussian_diffusion"], [11, 0, 0, "-", "unet"]], "pe.api.image.improved_diffusion_lib.gaussian_diffusion": [[10, 4, 1, "", "create_gaussian_diffusion"]], "pe.api.image.improved_diffusion_lib.unet": [[11, 4, 1, "", "create_model"]], "pe.api.image.stable_diffusion_api": [[13, 1, 1, "", "StableDiffusion"]], "pe.api.image.stable_diffusion_api.StableDiffusion": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "random_api"], [13, 2, 1, "", "variation_api"]], "pe.api.util": [[16, 1, 1, "", "ConstantList"]], "pe": [[17, 0, 0, "-", "callback"], [35, 0, 0, "-", "constant"], [37, 0, 0, "-", "data"], [52, 0, 0, "-", "dp"], [55, 0, 0, "-", "embedding"], [62, 0, 0, "-", "histogram"], [69, 0, 0, "-", "llm"], [78, 0, 0, "-", "logger"], [84, 0, 0, "-", "logging"], [85, 0, 0, "-", "metric_item"], [86, 0, 0, "-", "population"], [89, 0, 0, "-", "runner"], [91, 0, 0, "-", "util"]], "pe.callback": [[17, 1, 1, "", "Callback"], [17, 1, 1, "", "ComputeFID"], [17, 1, 1, "", "ComputePrecisionRecall"], [17, 1, 1, "", "DPImageBenchClassifyImages"], [17, 1, 1, "", "SampleImages"], [17, 1, 1, "", "SaveAllImages"], [17, 1, 1, "", "SaveCheckpoints"], [17, 1, 1, "", "SaveTextToCSV"], [18, 0, 0, "-", "callback"], [19, 0, 0, "-", "common"], [23, 0, 0, "-", "image"], [33, 0, 0, "-", "text"]], "pe.callback.Callback": [[17, 2, 1, "", "__call__"]], "pe.callback.ComputeFID": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"]], "pe.callback.ComputePrecisionRecall": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"]], "pe.callback.DPImageBenchClassifyImages": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "_get_data_loader"], [17, 2, 1, "", "_get_images_and_label_from_data"], [17, 2, 1, "", "_get_model"], [17, 2, 1, "", "evaluate"]], "pe.callback.SampleImages": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"]], "pe.callback.SaveAllImages": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "_save_image"]], "pe.callback.SaveCheckpoints": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "_get_checkpoint_path"]], "pe.callback.SaveTextToCSV": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "_get_csv_path"]], "pe.callback.callback": [[18, 1, 1, "", "Callback"]], "pe.callback.callback.Callback": [[18, 2, 1, "", "__call__"]], "pe.callback.common": [[20, 0, 0, "-", "compute_fid"], [21, 0, 0, "-", "compute_precision_recall"], [22, 0, 0, "-", "save_checkpoints"]], "pe.callback.common.compute_fid": [[20, 1, 1, "", "ComputeFID"]], "pe.callback.common.compute_fid.ComputeFID": [[20, 2, 1, "", "__call__"], [20, 2, 1, "", "__init__"]], "pe.callback.common.compute_precision_recall": [[21, 1, 1, "", "ComputePrecisionRecall"]], "pe.callback.common.compute_precision_recall.ComputePrecisionRecall": [[21, 2, 1, "", "__call__"], [21, 2, 1, "", "__init__"]], "pe.callback.common.save_checkpoints": [[22, 1, 1, "", "SaveCheckpoints"]], "pe.callback.common.save_checkpoints.SaveCheckpoints": [[22, 2, 1, "", "__call__"], [22, 2, 1, "", "__init__"], [22, 2, 1, "", "_get_checkpoint_path"]], "pe.callback.image": [[24, 0, 0, "-", "dpimagebench_classify_images"], [25, 0, 0, "-", "dpimagebench_lib"], [31, 0, 0, "-", "sample_images"], [32, 0, 0, "-", "save_all_images"]], "pe.callback.image.dpimagebench_classify_images": [[24, 1, 1, "", "DPImageBenchClassifyImages"]], "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "_get_data_loader"], [24, 2, 1, "", "_get_images_and_label_from_data"], [24, 2, 1, "", "_get_model"], [24, 2, 1, "", "evaluate"]], "pe.callback.image.dpimagebench_lib": [[26, 0, 0, "-", "densenet"], [27, 0, 0, "-", "ema"], [28, 0, 0, "-", "resnet"], [29, 0, 0, "-", "resnext"], [30, 0, 0, "-", "wrn"]], "pe.callback.image.dpimagebench_lib.densenet": [[26, 4, 1, "", "densenet"]], "pe.callback.image.dpimagebench_lib.ema": [[27, 1, 1, "", "ExponentialMovingAverage"]], "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "copy_to"], [27, 2, 1, "", "load_state_dict"], [27, 2, 1, "", "restore"], [27, 2, 1, "", "state_dict"], [27, 2, 1, "", "store"], [27, 2, 1, "", "update"]], "pe.callback.image.dpimagebench_lib.resnet": [[28, 4, 1, "", "resnet"]], "pe.callback.image.dpimagebench_lib.resnext": [[29, 4, 1, "", "resnext"]], "pe.callback.image.dpimagebench_lib.wrn": [[30, 1, 1, "", "BasicBlock"], [30, 1, 1, "", "NetworkBlock"], [30, 1, 1, "", "WideResNet"]], "pe.callback.image.dpimagebench_lib.wrn.BasicBlock": [[30, 2, 1, "", "forward"], [30, 3, 1, "", "training"]], "pe.callback.image.dpimagebench_lib.wrn.NetworkBlock": [[30, 2, 1, "", "forward"], [30, 3, 1, "", "training"]], "pe.callback.image.dpimagebench_lib.wrn.WideResNet": [[30, 2, 1, "", "forward"], [30, 3, 1, "", "training"]], "pe.callback.image.sample_images": [[31, 1, 1, "", "SampleImages"]], "pe.callback.image.sample_images.SampleImages": [[31, 2, 1, "", "__call__"], [31, 2, 1, "", "__init__"]], "pe.callback.image.save_all_images": [[32, 1, 1, "", "SaveAllImages"]], "pe.callback.image.save_all_images.SaveAllImages": [[32, 2, 1, "", "__call__"], [32, 2, 1, "", "__init__"], [32, 2, 1, "", "_save_image"]], "pe.callback.text": [[34, 0, 0, "-", "save_text_to_csv"]], "pe.callback.text.save_text_to_csv": [[34, 1, 1, "", "SaveTextToCSV"]], "pe.callback.text.save_text_to_csv.SaveTextToCSV": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "__init__"], [34, 2, 1, "", "_get_csv_path"]], "pe.constant": [[36, 0, 0, "-", "data"]], "pe.constant.data": [[36, 5, 1, "", "CLEAN_HISTOGRAM_COLUMN_NAME"], [36, 5, 1, "", "DP_HISTOGRAM_COLUMN_NAME"], [36, 5, 1, "", "EMBEDDING_COLUMN_NAME"], [36, 5, 1, "", "FROM_LAST_FLAG_COLUMN_NAME"], [36, 5, 1, "", "HISTOGRAM_NEAREST_NEIGHBORS_VOTING_IDS_COLUMN_NAME"], [36, 5, 1, "", "IMAGE_DATA_COLUMN_NAME"], [36, 5, 1, "", "IMAGE_MODEL_LABEL_COLUMN_NAME"], [36, 5, 1, "", "IMAGE_PROMPT_COLUMN_NAME"], [36, 5, 1, "", "LABEL_ID_COLUMN_NAME"], [36, 5, 1, "", "LLM_PARAMETERS_COLUMN_NAME"], [36, 5, 1, "", "LLM_REQUEST_MESSAGES_COLUMN_NAME"], [36, 5, 1, "", "LOOKAHEAD_EMBEDDING_COLUMN_NAME"], [36, 5, 1, "", "PARENT_SYN_DATA_INDEX_COLUMN_NAME"], [36, 5, 1, "", "POST_PROCESSED_DP_HISTOGRAM_COLUMN_NAME"], [36, 5, 1, "", "TEXT_DATA_COLUMN_NAME"], [36, 5, 1, "", "VARIATION_API_FOLD_ID_COLUMN_NAME"]], "pe.data": [[37, 1, 1, "", "Camelyon17"], [37, 1, 1, "", "Cat"], [37, 1, 1, "", "CelebA"], [37, 1, 1, "", "Cifar10"], [37, 1, 1, "", "Data"], [37, 1, 1, "", "DigiFace1M"], [37, 1, 1, "", "MNIST"], [37, 1, 1, "", "OpenReview"], [37, 1, 1, "", "PubMed"], [37, 1, 1, "", "TextCSV"], [37, 1, 1, "", "Yelp"], [38, 0, 0, "-", "data"], [39, 0, 0, "-", "image"], [37, 4, 1, "", "load_image_folder"], [47, 0, 0, "-", "text"]], "pe.data.Camelyon17": [[37, 2, 1, "", "__init__"]], "pe.data.Cat": [[37, 3, 1, "", "URL"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "_download"], [37, 2, 1, "", "_read_data"]], "pe.data.CelebA": [[37, 2, 1, "", "__init__"]], "pe.data.Cifar10": [[37, 2, 1, "", "__init__"]], "pe.data.Data": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "concat"], [37, 2, 1, "", "filter"], [37, 2, 1, "", "filter_label_id"], [37, 2, 1, "", "load_checkpoint"], [37, 2, 1, "", "merge"], [37, 2, 1, "", "random_split"], [37, 2, 1, "", "random_truncate"], [37, 2, 1, "", "save_checkpoint"], [37, 2, 1, "", "set_label_id"], [37, 2, 1, "", "truncate"]], "pe.data.DigiFace1M": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "_read_and_process_image"]], "pe.data.MNIST": [[37, 2, 1, "", "__init__"]], "pe.data.OpenReview": [[37, 3, 1, "", "DOWNLOAD_INFO_DICT"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "_download"]], "pe.data.PubMed": [[37, 3, 1, "", "DOWNLOAD_INFO_DICT"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "_download"]], "pe.data.TextCSV": [[37, 2, 1, "", "__init__"]], "pe.data.Yelp": [[37, 3, 1, "", "DOWNLOAD_INFO_DICT"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "_download"]], "pe.data.data": [[38, 1, 1, "", "Data"]], "pe.data.data.Data": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "concat"], [38, 2, 1, "", "filter"], [38, 2, 1, "", "filter_label_id"], [38, 2, 1, "", "load_checkpoint"], [38, 2, 1, "", "merge"], [38, 2, 1, "", "random_split"], [38, 2, 1, "", "random_truncate"], [38, 2, 1, "", "save_checkpoint"], [38, 2, 1, "", "set_label_id"], [38, 2, 1, "", "truncate"]], "pe.data.image": [[40, 0, 0, "-", "camelyon17"], [41, 0, 0, "-", "cat"], [42, 0, 0, "-", "celeba"], [43, 0, 0, "-", "cifar10"], [44, 0, 0, "-", "digiface1m"], [45, 0, 0, "-", "image"], [46, 0, 0, "-", "mnist"]], "pe.data.image.camelyon17": [[40, 1, 1, "", "Camelyon17"]], "pe.data.image.camelyon17.Camelyon17": [[40, 2, 1, "", "__init__"]], "pe.data.image.cat": [[41, 1, 1, "", "Cat"]], "pe.data.image.cat.Cat": [[41, 3, 1, "", "URL"], [41, 2, 1, "", "__init__"], [41, 2, 1, "", "_download"], [41, 2, 1, "", "_read_data"]], "pe.data.image.celeba": [[42, 1, 1, "", "CelebA"], [42, 1, 1, "", "target_transform"]], "pe.data.image.celeba.CelebA": [[42, 2, 1, "", "__init__"]], "pe.data.image.cifar10": [[43, 1, 1, "", "Cifar10"]], "pe.data.image.cifar10.Cifar10": [[43, 2, 1, "", "__init__"]], "pe.data.image.digiface1m": [[44, 1, 1, "", "DigiFace1M"]], "pe.data.image.digiface1m.DigiFace1M": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "_read_and_process_image"]], "pe.data.image.image": [[45, 1, 1, "", "ImageDataset"], [45, 4, 1, "", "_list_image_files_recursively"], [45, 4, 1, "", "load_image_folder"]], "pe.data.image.mnist": [[46, 1, 1, "", "MNIST"]], "pe.data.image.mnist.MNIST": [[46, 2, 1, "", "__init__"]], "pe.data.text": [[48, 0, 0, "-", "openreview"], [49, 0, 0, "-", "pubmed"], [50, 0, 0, "-", "text_csv"], [51, 0, 0, "-", "yelp"]], "pe.data.text.openreview": [[48, 6, 1, "", "DownloadInfo"], [48, 1, 1, "", "OpenReview"]], "pe.data.text.openreview.DownloadInfo": [[48, 7, 1, "", "type"], [48, 7, 1, "", "url"]], "pe.data.text.openreview.OpenReview": [[48, 3, 1, "", "DOWNLOAD_INFO_DICT"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "_download"]], "pe.data.text.pubmed": [[49, 6, 1, "", "DownloadInfo"], [49, 1, 1, "", "PubMed"]], "pe.data.text.pubmed.DownloadInfo": [[49, 7, 1, "", "type"], [49, 7, 1, "", "url"]], "pe.data.text.pubmed.PubMed": [[49, 3, 1, "", "DOWNLOAD_INFO_DICT"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "_download"]], "pe.data.text.text_csv": [[50, 1, 1, "", "TextCSV"]], "pe.data.text.text_csv.TextCSV": [[50, 2, 1, "", "__init__"]], "pe.data.text.yelp": [[51, 6, 1, "", "DownloadInfo"], [51, 1, 1, "", "Yelp"]], "pe.data.text.yelp.DownloadInfo": [[51, 7, 1, "", "type"], [51, 7, 1, "", "url"]], "pe.data.text.yelp.Yelp": [[51, 3, 1, "", "DOWNLOAD_INFO_DICT"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "_download"]], "pe.dp": [[52, 1, 1, "", "DP"], [52, 1, 1, "", "Gaussian"], [53, 0, 0, "-", "dp"], [54, 0, 0, "-", "gaussian"]], "pe.dp.DP": [[52, 2, 1, "", "add_noise"], [52, 2, 1, "", "set_epsilon_and_delta"]], "pe.dp.Gaussian": [[52, 2, 1, "", "add_noise"], [52, 2, 1, "", "set_epsilon_and_delta"]], "pe.dp.dp": [[53, 1, 1, "", "DP"]], "pe.dp.dp.DP": [[53, 2, 1, "", "add_noise"], [53, 2, 1, "", "set_epsilon_and_delta"]], "pe.dp.gaussian": [[54, 1, 1, "", "Gaussian"], [54, 4, 1, "", "compute_epsilon"], [54, 4, 1, "", "delta_Gaussian"], [54, 4, 1, "", "eps_Gaussian"], [54, 4, 1, "", "get_noise_multiplier"]], "pe.dp.gaussian.Gaussian": [[54, 2, 1, "", "add_noise"], [54, 2, 1, "", "set_epsilon_and_delta"]], "pe.embedding": [[55, 1, 1, "", "Embedding"], [55, 1, 1, "", "FLDInception"], [55, 1, 1, "", "Inception"], [55, 1, 1, "", "SentenceTransformer"], [56, 0, 0, "-", "embedding"], [57, 0, 0, "-", "image"], [60, 0, 0, "-", "text"]], "pe.embedding.Embedding": [[55, 8, 1, "", "column_name"], [55, 2, 1, "", "compute_embedding"], [55, 2, 1, "", "filter_uncomputed_rows"], [55, 2, 1, "", "merge_computed_rows"]], "pe.embedding.FLDInception": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "compute_embedding"]], "pe.embedding.Inception": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "compute_embedding"]], "pe.embedding.SentenceTransformer": [[55, 2, 1, "", "__init__"], [55, 8, 1, "", "column_name"], [55, 2, 1, "", "compute_embedding"]], "pe.embedding.embedding": [[56, 1, 1, "", "Embedding"]], "pe.embedding.embedding.Embedding": [[56, 8, 1, "", "column_name"], [56, 2, 1, "", "compute_embedding"], [56, 2, 1, "", "filter_uncomputed_rows"], [56, 2, 1, "", "merge_computed_rows"]], "pe.embedding.image": [[58, 0, 0, "-", "fld_inception"], [59, 0, 0, "-", "inception"]], "pe.embedding.image.fld_inception": [[58, 1, 1, "", "FLDInception"], [58, 4, 1, "", "to_uint8"]], "pe.embedding.image.fld_inception.FLDInception": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "compute_embedding"]], "pe.embedding.image.inception": [[59, 1, 1, "", "Inception"], [59, 4, 1, "", "to_uint8"]], "pe.embedding.image.inception.Inception": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "compute_embedding"]], "pe.embedding.text": [[61, 0, 0, "-", "sentence_transformer"]], "pe.embedding.text.sentence_transformer": [[61, 1, 1, "", "SentenceTransformer"]], "pe.embedding.text.sentence_transformer.SentenceTransformer": [[61, 2, 1, "", "__init__"], [61, 8, 1, "", "column_name"], [61, 2, 1, "", "compute_embedding"]], "pe.histogram": [[62, 1, 1, "", "Histogram"], [62, 1, 1, "", "NearestNeighbors"], [63, 0, 0, "-", "histogram"], [64, 0, 0, "-", "nearest_neighbor_backend"], [68, 0, 0, "-", "nearest_neighbors"]], "pe.histogram.Histogram": [[62, 2, 1, "", "compute_histogram"]], "pe.histogram.NearestNeighbors": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "_compute_lookahead_embedding"], [62, 2, 1, "", "_log_lookahead"], [62, 2, 1, "", "_log_voting_details"], [62, 2, 1, "", "compute_histogram"]], "pe.histogram.histogram": [[63, 1, 1, "", "Histogram"]], "pe.histogram.histogram.Histogram": [[63, 2, 1, "", "compute_histogram"]], "pe.histogram.nearest_neighbor_backend": [[65, 0, 0, "-", "auto"], [66, 0, 0, "-", "faiss"], [67, 0, 0, "-", "sklearn"]], "pe.histogram.nearest_neighbor_backend.auto": [[65, 4, 1, "", "search"]], "pe.histogram.nearest_neighbor_backend.faiss": [[66, 4, 1, "", "search"]], "pe.histogram.nearest_neighbor_backend.sklearn": [[67, 4, 1, "", "search"]], "pe.histogram.nearest_neighbors": [[68, 1, 1, "", "NearestNeighbors"]], "pe.histogram.nearest_neighbors.NearestNeighbors": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "_compute_lookahead_embedding"], [68, 2, 1, "", "_log_lookahead"], [68, 2, 1, "", "_log_voting_details"], [68, 2, 1, "", "compute_histogram"]], "pe.llm": [[69, 1, 1, "", "AzureOpenAILLM"], [69, 1, 1, "", "HuggingfaceLLM"], [69, 1, 1, "", "LLM"], [69, 1, 1, "", "OpenAILLM"], [69, 6, 1, "", "Request"], [70, 0, 0, "-", "azure_openai"], [71, 0, 0, "-", "huggingface"], [75, 0, 0, "-", "llm"], [76, 0, 0, "-", "openai"], [77, 0, 0, "-", "request"]], "pe.llm.AzureOpenAILLM": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "_get_environment_variable"], [69, 2, 1, "", "_get_response_for_one_request"], [69, 8, 1, "", "generation_arg_map"], [69, 2, 1, "", "get_responses"]], "pe.llm.HuggingfaceLLM": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "_get_conv_template"], [69, 2, 1, "", "_get_prompt"], [69, 2, 1, "", "_get_responses"], [69, 8, 1, "", "generation_arg_map"], [69, 2, 1, "", "get_responses"]], "pe.llm.LLM": [[69, 8, 1, "", "generation_arg_map"], [69, 2, 1, "", "get_generation_args"], [69, 2, 1, "", "get_responses"]], "pe.llm.OpenAILLM": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "_get_environment_variable"], [69, 2, 1, "", "_get_response_for_one_request"], [69, 2, 1, "", "get_responses"]], "pe.llm.Request": [[69, 7, 1, "", "generation_args"], [69, 7, 1, "", "messages"]], "pe.llm.azure_openai": [[70, 1, 1, "", "AzureOpenAILLM"]], "pe.llm.azure_openai.AzureOpenAILLM": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "_get_environment_variable"], [70, 2, 1, "", "_get_response_for_one_request"], [70, 8, 1, "", "generation_arg_map"], [70, 2, 1, "", "get_responses"]], "pe.llm.huggingface": [[72, 0, 0, "-", "huggingface"], [73, 0, 0, "-", "register_fastchat"]], "pe.llm.huggingface.huggingface": [[72, 1, 1, "", "HuggingfaceLLM"]], "pe.llm.huggingface.huggingface.HuggingfaceLLM": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "_get_conv_template"], [72, 2, 1, "", "_get_prompt"], [72, 2, 1, "", "_get_responses"], [72, 8, 1, "", "generation_arg_map"], [72, 2, 1, "", "get_responses"]], "pe.llm.huggingface.register_fastchat": [[74, 0, 0, "-", "gpt2"]], "pe.llm.huggingface.register_fastchat.gpt2": [[74, 4, 1, "", "register"]], "pe.llm.llm": [[75, 1, 1, "", "LLM"]], "pe.llm.llm.LLM": [[75, 8, 1, "", "generation_arg_map"], [75, 2, 1, "", "get_generation_args"], [75, 2, 1, "", "get_responses"]], "pe.llm.openai": [[76, 1, 1, "", "OpenAILLM"]], "pe.llm.openai.OpenAILLM": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "_get_environment_variable"], [76, 2, 1, "", "_get_response_for_one_request"], [76, 2, 1, "", "get_responses"]], "pe.llm.request": [[77, 6, 1, "", "Request"]], "pe.llm.request.Request": [[77, 7, 1, "", "generation_args"], [77, 7, 1, "", "messages"]], "pe.logger": [[78, 1, 1, "", "CSVPrint"], [78, 1, 1, "", "ImageFile"], [78, 1, 1, "", "LogPrint"], [78, 1, 1, "", "Logger"], [78, 1, 1, "", "MatplotlibPDF"], [79, 0, 0, "-", "csv_print"], [80, 0, 0, "-", "image_file"], [81, 0, 0, "-", "log_print"], [82, 0, 0, "-", "logger"], [83, 0, 0, "-", "matplotlib_pdf"]], "pe.logger.CSVPrint": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "_clear_logs"], [78, 2, 1, "", "_flush"], [78, 2, 1, "", "_get_log_path"], [78, 2, 1, "", "_log_float"], [78, 2, 1, "", "clean_up"], [78, 2, 1, "", "log"]], "pe.logger.ImageFile": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "_get_image_path"], [78, 2, 1, "", "_log_image"], [78, 2, 1, "", "_log_image_list"], [78, 2, 1, "", "log"]], "pe.logger.LogPrint": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "log"]], "pe.logger.Logger": [[78, 2, 1, "", "clean_up"], [78, 2, 1, "", "log"]], "pe.logger.MatplotlibPDF": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "_get_pdf_path"], [78, 2, 1, "", "log"]], "pe.logger.csv_print": [[79, 1, 1, "", "CSVPrint"]], "pe.logger.csv_print.CSVPrint": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "_clear_logs"], [79, 2, 1, "", "_flush"], [79, 2, 1, "", "_get_log_path"], [79, 2, 1, "", "_log_float"], [79, 2, 1, "", "clean_up"], [79, 2, 1, "", "log"]], "pe.logger.image_file": [[80, 1, 1, "", "ImageFile"]], "pe.logger.image_file.ImageFile": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "_get_image_path"], [80, 2, 1, "", "_log_image"], [80, 2, 1, "", "_log_image_list"], [80, 2, 1, "", "log"]], "pe.logger.log_print": [[81, 1, 1, "", "LogPrint"]], "pe.logger.log_print.LogPrint": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "log"]], "pe.logger.logger": [[82, 1, 1, "", "Logger"]], "pe.logger.logger.Logger": [[82, 2, 1, "", "clean_up"], [82, 2, 1, "", "log"]], "pe.logger.matplotlib_pdf": [[83, 1, 1, "", "MatplotlibPDF"]], "pe.logger.matplotlib_pdf.MatplotlibPDF": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "_get_pdf_path"], [83, 2, 1, "", "log"]], "pe.logging": [[84, 5, 1, "", "execution_logger"], [84, 4, 1, "", "setup_logging"]], "pe.metric_item": [[85, 1, 1, "", "FloatListMetricItem"], [85, 1, 1, "", "FloatMetricItem"], [85, 1, 1, "", "ImageListMetricItem"], [85, 1, 1, "", "ImageMetricItem"], [85, 1, 1, "", "MatplotlibMetricItem"], [85, 1, 1, "", "MetricItem"], [85, 1, 1, "", "metric_scope"]], "pe.metric_item.ImageListMetricItem": [[85, 2, 1, "", "__init__"], [85, 8, 1, "", "num_images_per_row"]], "pe.metric_item.MatplotlibMetricItem": [[85, 2, 1, "", "clean_up"]], "pe.metric_item.MetricItem": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "clean_up"], [85, 8, 1, "", "name"], [85, 8, 1, "", "value"]], "pe.population": [[86, 1, 1, "", "PEPopulation"], [86, 1, 1, "", "Population"], [87, 0, 0, "-", "pe_population"], [88, 0, 0, "-", "population"]], "pe.population.PEPopulation": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "_post_process_histogram"], [86, 2, 1, "", "_select_data"], [86, 2, 1, "", "initial"], [86, 2, 1, "", "next"]], "pe.population.Population": [[86, 2, 1, "", "initial"], [86, 2, 1, "", "next"]], "pe.population.pe_population": [[87, 1, 1, "", "PEPopulation"]], "pe.population.pe_population.PEPopulation": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "_post_process_histogram"], [87, 2, 1, "", "_select_data"], [87, 2, 1, "", "initial"], [87, 2, 1, "", "next"]], "pe.population.population": [[88, 1, 1, "", "Population"]], "pe.population.population.Population": [[88, 2, 1, "", "initial"], [88, 2, 1, "", "next"]], "pe.runner": [[89, 1, 1, "", "PE"], [90, 0, 0, "-", "pe"]], "pe.runner.PE": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "_clean_up_loggers"], [89, 2, 1, "", "_get_num_samples_per_label_id"], [89, 2, 1, "", "_log_metrics"], [89, 2, 1, "", "evaluate"], [89, 2, 1, "", "load_checkpoint"], [89, 2, 1, "", "run"]], "pe.runner.pe": [[90, 1, 1, "", "PE"]], "pe.runner.pe.PE": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "_clean_up_loggers"], [90, 2, 1, "", "_get_num_samples_per_label_id"], [90, 2, 1, "", "_log_metrics"], [90, 2, 1, "", "evaluate"], [90, 2, 1, "", "load_checkpoint"], [90, 2, 1, "", "run"]], "pe.util": [[92, 0, 0, "-", "download"]], "pe.util.download": [[92, 4, 1, "", "download"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:namedtuple", "7": "py:namedtuple-field", "8": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "namedtuple", "Python namedtuple"], "7": ["py", "namedtuple-field", "Python namedtuple-field"], "8": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 93, 107], "refer": 0, "content": [0, 96, 104, 108], "pe": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "packag": [2, 3, 5, 9, 14, 17, 19, 23, 25, 33, 35, 37, 39, 47, 52, 55, 57, 60, 62, 64, 69, 71, 73, 78, 84, 85, 86, 89, 91, 105], "subpackag": [2, 3, 5, 17, 23, 37, 55, 62, 69, 71], "submodul": [3, 5, 9, 14, 17, 19, 23, 25, 33, 35, 37, 39, 47, 52, 55, 57, 60, 62, 64, 69, 71, 73, 78, 86, 89, 91], "modul": [4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 58, 59, 61, 63, 65, 66, 67, 68, 70, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 87, 88, 90, 92], "imag": [5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 57, 58, 59, 103, 105], "avatar_api": 6, "draw_text_api": 7, "improved_diffusion_api": 8, "improved_diffusion_lib": [9, 10, 11], "gaussian_diffus": 10, "unet": 11, "nearest_image_api": 12, "stable_diffusion_api": 13, "text": [14, 15, 33, 34, 47, 48, 49, 50, 51, 60, 61, 103, 105], "llm_augpe_api": 15, "util": [16, 91, 92], "callback": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 94], "common": [19, 20, 21, 22], "compute_fid": 20, "compute_precision_recal": 21, "save_checkpoint": 22, "dpimagebench_classify_imag": 24, "dpimagebench_lib": [25, 26, 27, 28, 29, 30], "densenet": 26, "ema": 27, "resnet": 28, "resnext": 29, "wrn": 30, "sample_imag": 31, "save_all_imag": 32, "save_text_to_csv": 34, "constant": [35, 36], "data": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 95, 107], "camelyon17": 40, "cat": 41, "celeba": 42, "cifar10": 43, "digiface1m": 44, "mnist": 46, "openreview": 48, "pubm": 49, "text_csv": 50, "yelp": 51, "dp": [52, 53, 54, 97], "gaussian": 54, "embed": [55, 56, 57, 58, 59, 60, 61, 98], "fld_incept": 58, "incept": 59, "sentence_transform": 61, "histogram": [62, 63, 64, 65, 66, 67, 68, 99], "nearest_neighbor_backend": [64, 65, 66, 67], "auto": 65, "faiss": [66, 105], "sklearn": 67, "nearest_neighbor": 68, "llm": [69, 70, 71, 72, 73, 74, 75, 76, 77], "azure_openai": 70, "huggingfac": [71, 72, 73, 74], "register_fastchat": [73, 74], "gpt2": 74, "openai": 76, "request": 77, "logger": [78, 79, 80, 81, 82, 83, 94], "csv_print": 79, "image_fil": 80, "log_print": 81, "matplotlib_pdf": 83, "log": 84, "metric_item": 85, "popul": [86, 87, 88, 101], "pe_popul": 87, "runner": [89, 90, 102], "download": 92, "avail": [93, 94, 95, 97, 98, 99, 101], "ad": 93, "your": [93, 95, 107], "own": [93, 95, 107], "dataset": 95, "us": [95, 107], "detail": 96, "librari": [96, 100, 106], "differenti": 97, "privaci": 97, "mechan": 97, "overview": 100, "The": [100, 105], "privat": [100, 106, 108], "evolut": [100, 106, 108], "algorithm": 100, "core": 100, "design": 100, "principl": 100, "thi": [100, 106], "compon": 100, "exampl": 103, "get": 104, "start": 104, "instal": 105, "pip": 105, "main": 105, "gener": 105, "edit": 105, "mode": 105, "what": 106, "i": 106, "kei": 106, "featur": 106, "provid": 106, "citat": 106, "document": 108}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "Contents:": [[0, null], [96, null], [104, null], [108, null]], "pe": [[1, "pe"]], "pe package": [[2, "module-pe"]], "Subpackages": [[2, "subpackages"], [3, "subpackages"], [5, "subpackages"], [17, "subpackages"], [23, "subpackages"], [37, "subpackages"], [55, "subpackages"], [62, "subpackages"], [69, "subpackages"], [71, "subpackages"]], "pe.api package": [[3, "pe-api-package"]], "Submodules": [[3, "submodules"], [5, "submodules"], [9, "submodules"], [14, "submodules"], [17, "submodules"], [19, "submodules"], [23, "submodules"], [25, "submodules"], [33, "submodules"], [35, "submodules"], [37, "submodules"], [39, "submodules"], [47, "submodules"], [52, "submodules"], [55, "submodules"], [57, "submodules"], [60, "submodules"], [62, "submodules"], [64, "submodules"], [69, "submodules"], [71, "submodules"], [73, "submodules"], [78, "submodules"], [86, "submodules"], [89, "submodules"], [91, "submodules"]], "pe.api.api module": [[4, "module-pe.api.api"]], "pe.api.image package": [[5, "pe-api-image-package"]], "pe.api.image.avatar_api module": [[6, "pe-api-image-avatar-api-module"]], "pe.api.image.draw_text_api module": [[7, "module-pe.api.image.draw_text_api"]], "pe.api.image.improved_diffusion_api module": [[8, "module-pe.api.image.improved_diffusion_api"]], "pe.api.image.improved_diffusion_lib package": [[9, "module-pe.api.image.improved_diffusion_lib"]], "pe.api.image.improved_diffusion_lib.gaussian_diffusion module": [[10, "module-pe.api.image.improved_diffusion_lib.gaussian_diffusion"]], "pe.api.image.improved_diffusion_lib.unet module": [[11, "module-pe.api.image.improved_diffusion_lib.unet"]], "pe.api.image.nearest_image_api module": [[12, "pe-api-image-nearest-image-api-module"]], "pe.api.image.stable_diffusion_api module": [[13, "module-pe.api.image.stable_diffusion_api"]], "pe.api.text package": [[14, "pe-api-text-package"]], "pe.api.text.llm_augpe_api module": [[15, "pe-api-text-llm-augpe-api-module"]], "pe.api.util module": [[16, "module-pe.api.util"]], "pe.callback package": [[17, "module-pe.callback"]], "pe.callback.callback module": [[18, "module-pe.callback.callback"]], "pe.callback.common package": [[19, "module-pe.callback.common"]], "pe.callback.common.compute_fid module": [[20, "module-pe.callback.common.compute_fid"]], "pe.callback.common.compute_precision_recall module": [[21, "module-pe.callback.common.compute_precision_recall"]], "pe.callback.common.save_checkpoints module": [[22, "module-pe.callback.common.save_checkpoints"]], "pe.callback.image package": [[23, "module-pe.callback.image"]], "pe.callback.image.dpimagebench_classify_images module": [[24, "module-pe.callback.image.dpimagebench_classify_images"]], "pe.callback.image.dpimagebench_lib package": [[25, "module-pe.callback.image.dpimagebench_lib"]], "pe.callback.image.dpimagebench_lib.densenet module": [[26, "module-pe.callback.image.dpimagebench_lib.densenet"]], "pe.callback.image.dpimagebench_lib.ema module": [[27, "module-pe.callback.image.dpimagebench_lib.ema"]], "pe.callback.image.dpimagebench_lib.resnet module": [[28, "module-pe.callback.image.dpimagebench_lib.resnet"]], "pe.callback.image.dpimagebench_lib.resnext module": [[29, "module-pe.callback.image.dpimagebench_lib.resnext"]], "pe.callback.image.dpimagebench_lib.wrn module": [[30, "module-pe.callback.image.dpimagebench_lib.wrn"]], "pe.callback.image.sample_images module": [[31, "module-pe.callback.image.sample_images"]], "pe.callback.image.save_all_images module": [[32, "module-pe.callback.image.save_all_images"]], "pe.callback.text package": [[33, "module-pe.callback.text"]], "pe.callback.text.save_text_to_csv module": [[34, "module-pe.callback.text.save_text_to_csv"]], "pe.constant package": [[35, "module-pe.constant"]], "pe.constant.data module": [[36, "module-pe.constant.data"]], "pe.data package": [[37, "module-pe.data"]], "pe.data.data module": [[38, "module-pe.data.data"]], "pe.data.image package": [[39, "module-pe.data.image"]], "pe.data.image.camelyon17 module": [[40, "module-pe.data.image.camelyon17"]], "pe.data.image.cat module": [[41, "module-pe.data.image.cat"]], "pe.data.image.celeba module": [[42, "module-pe.data.image.celeba"]], "pe.data.image.cifar10 module": [[43, "module-pe.data.image.cifar10"]], "pe.data.image.digiface1m module": [[44, "module-pe.data.image.digiface1m"]], "pe.data.image.image module": [[45, "module-pe.data.image.image"]], "pe.data.image.mnist module": [[46, "module-pe.data.image.mnist"]], "pe.data.text package": [[47, "module-pe.data.text"]], "pe.data.text.openreview module": [[48, "module-pe.data.text.openreview"]], "pe.data.text.pubmed module": [[49, "module-pe.data.text.pubmed"]], "pe.data.text.text_csv module": [[50, "module-pe.data.text.text_csv"]], "pe.data.text.yelp module": [[51, "module-pe.data.text.yelp"]], "pe.dp package": [[52, "module-pe.dp"]], "pe.dp.dp module": [[53, "module-pe.dp.dp"]], "pe.dp.gaussian module": [[54, "module-pe.dp.gaussian"]], "pe.embedding package": [[55, "module-pe.embedding"]], "pe.embedding.embedding module": [[56, "module-pe.embedding.embedding"]], "pe.embedding.image package": [[57, "module-pe.embedding.image"]], "pe.embedding.image.fld_inception module": [[58, "module-pe.embedding.image.fld_inception"]], "pe.embedding.image.inception module": [[59, "module-pe.embedding.image.inception"]], "pe.embedding.text package": [[60, "module-pe.embedding.text"]], "pe.embedding.text.sentence_transformer module": [[61, "module-pe.embedding.text.sentence_transformer"]], "pe.histogram package": [[62, "module-pe.histogram"]], "pe.histogram.histogram module": [[63, "module-pe.histogram.histogram"]], "pe.histogram.nearest_neighbor_backend package": [[64, "module-pe.histogram.nearest_neighbor_backend"]], "pe.histogram.nearest_neighbor_backend.auto module": [[65, "module-pe.histogram.nearest_neighbor_backend.auto"]], "pe.histogram.nearest_neighbor_backend.faiss module": [[66, "module-pe.histogram.nearest_neighbor_backend.faiss"]], "pe.histogram.nearest_neighbor_backend.sklearn module": [[67, "module-pe.histogram.nearest_neighbor_backend.sklearn"]], "pe.histogram.nearest_neighbors module": [[68, "module-pe.histogram.nearest_neighbors"]], "pe.llm package": [[69, "module-pe.llm"]], "pe.llm.azure_openai module": [[70, "module-pe.llm.azure_openai"]], "pe.llm.huggingface package": [[71, "module-pe.llm.huggingface"]], "pe.llm.huggingface.huggingface module": [[72, "module-pe.llm.huggingface.huggingface"]], "pe.llm.huggingface.register_fastchat package": [[73, "module-pe.llm.huggingface.register_fastchat"]], "pe.llm.huggingface.register_fastchat.gpt2 module": [[74, "module-pe.llm.huggingface.register_fastchat.gpt2"]], "pe.llm.llm module": [[75, "module-pe.llm.llm"]], "pe.llm.openai module": [[76, "module-pe.llm.openai"]], "pe.llm.request module": [[77, "module-pe.llm.request"]], "pe.logger package": [[78, "module-pe.logger"]], "pe.logger.csv_print module": [[79, "module-pe.logger.csv_print"]], "pe.logger.image_file module": [[80, "module-pe.logger.image_file"]], "pe.logger.log_print module": [[81, "module-pe.logger.log_print"]], "pe.logger.logger module": [[82, "module-pe.logger.logger"]], "pe.logger.matplotlib_pdf module": [[83, "module-pe.logger.matplotlib_pdf"]], "pe.logging package": [[84, "module-pe.logging"]], "pe.metric_item package": [[85, "module-pe.metric_item"]], "pe.population package": [[86, "module-pe.population"]], "pe.population.pe_population module": [[87, "module-pe.population.pe_population"]], "pe.population.population module": [[88, "module-pe.population.population"]], "pe.runner package": [[89, "module-pe.runner"]], "pe.runner.pe module": [[90, "module-pe.runner.pe"]], "pe.util package": [[91, "module-pe.util"]], "pe.util.download module": [[92, "module-pe.util.download"]], "APIs": [[93, "apis"], [107, "apis"]], "Available APIs": [[93, "available-apis"]], "Adding Your Own APIs": [[93, "adding-your-own-apis"]], "Callbacks and Loggers": [[94, "callbacks-and-loggers"]], "Available Callbacks": [[94, "available-callbacks"]], "Available Loggers": [[94, "available-loggers"]], "Data": [[95, "data"], [107, "data"]], "Available Datasets": [[95, "available-datasets"]], "Using Your Own Datasets": [[95, "using-your-own-datasets"]], "Details of the Library": [[96, "details-of-the-library"]], "DP": [[97, "dp"]], "Available Differential Privacy Mechanisms": [[97, "available-differential-privacy-mechanisms"]], "Embeddings": [[98, "embeddings"]], "Available Embeddings": [[98, "available-embeddings"]], "Histograms": [[99, "histograms"]], "Available Histograms": [[99, "available-histograms"]], "Overview": [[100, "overview"]], "The Private Evolution Algorithm": [[100, "the-private-evolution-algorithm"]], "Core Design Principles of This Library": [[100, "core-design-principles-of-this-library"]], "Core Components of This Library": [[100, "core-components-of-this-library"]], "Population": [[101, "population"]], "Available Populations": [[101, "available-populations"]], "Runner": [[102, "runner"]], "Examples": [[103, "examples"]], "Images": [[103, "images"]], "Text": [[103, "text"]], "Getting Started": [[104, "getting-started"]], "Installation": [[105, "installation"]], "PIP": [[105, "pip"]], "The Main Package": [[105, "the-main-package"]], "Image Generation": [[105, "image-generation"]], "Text Generation": [[105, "text-generation"]], "Editable Mode": [[105, "editable-mode"]], "Faiss": [[105, "faiss"]], "What is Private Evolution?": [[106, "what-is-private-evolution"]], "Key Features": [[106, "key-features"]], "What This Library Provides": [[106, "what-this-library-provides"]], "Citations": [[106, "citations"]], "Using Your Own Data/APIs": [[107, "using-your-own-data-apis"]], "Private Evolution Documentation": [[108, "private-evolution-documentation"]]}, "indexentries": {"module": [[2, "module-pe"], [4, "module-pe.api.api"], [7, "module-pe.api.image.draw_text_api"], [8, "module-pe.api.image.improved_diffusion_api"], [9, "module-pe.api.image.improved_diffusion_lib"], [10, "module-pe.api.image.improved_diffusion_lib.gaussian_diffusion"], [11, "module-pe.api.image.improved_diffusion_lib.unet"], [13, "module-pe.api.image.stable_diffusion_api"], [16, "module-pe.api.util"], [17, "module-pe.callback"], [18, "module-pe.callback.callback"], [19, "module-pe.callback.common"], [20, "module-pe.callback.common.compute_fid"], [21, "module-pe.callback.common.compute_precision_recall"], [22, "module-pe.callback.common.save_checkpoints"], [23, "module-pe.callback.image"], [24, "module-pe.callback.image.dpimagebench_classify_images"], [25, "module-pe.callback.image.dpimagebench_lib"], [26, "module-pe.callback.image.dpimagebench_lib.densenet"], [27, "module-pe.callback.image.dpimagebench_lib.ema"], [28, "module-pe.callback.image.dpimagebench_lib.resnet"], [29, "module-pe.callback.image.dpimagebench_lib.resnext"], [30, "module-pe.callback.image.dpimagebench_lib.wrn"], [31, "module-pe.callback.image.sample_images"], [32, "module-pe.callback.image.save_all_images"], [33, "module-pe.callback.text"], [34, "module-pe.callback.text.save_text_to_csv"], [35, "module-pe.constant"], [36, "module-pe.constant.data"], [37, "module-pe.data"], [38, "module-pe.data.data"], [39, "module-pe.data.image"], [40, "module-pe.data.image.camelyon17"], [41, "module-pe.data.image.cat"], [42, "module-pe.data.image.celeba"], [43, "module-pe.data.image.cifar10"], [44, "module-pe.data.image.digiface1m"], [45, "module-pe.data.image.image"], [46, "module-pe.data.image.mnist"], [47, "module-pe.data.text"], [48, "module-pe.data.text.openreview"], [49, "module-pe.data.text.pubmed"], [50, "module-pe.data.text.text_csv"], [51, "module-pe.data.text.yelp"], [52, "module-pe.dp"], [53, "module-pe.dp.dp"], [54, "module-pe.dp.gaussian"], [55, "module-pe.embedding"], [56, "module-pe.embedding.embedding"], [57, "module-pe.embedding.image"], [58, "module-pe.embedding.image.fld_inception"], [59, "module-pe.embedding.image.inception"], [60, "module-pe.embedding.text"], [61, "module-pe.embedding.text.sentence_transformer"], [62, "module-pe.histogram"], [63, "module-pe.histogram.histogram"], [64, "module-pe.histogram.nearest_neighbor_backend"], [65, "module-pe.histogram.nearest_neighbor_backend.auto"], [66, "module-pe.histogram.nearest_neighbor_backend.faiss"], [67, "module-pe.histogram.nearest_neighbor_backend.sklearn"], [68, "module-pe.histogram.nearest_neighbors"], [69, "module-pe.llm"], [70, "module-pe.llm.azure_openai"], [71, "module-pe.llm.huggingface"], [72, "module-pe.llm.huggingface.huggingface"], [73, "module-pe.llm.huggingface.register_fastchat"], [74, "module-pe.llm.huggingface.register_fastchat.gpt2"], [75, "module-pe.llm.llm"], [76, "module-pe.llm.openai"], [77, "module-pe.llm.request"], [78, "module-pe.logger"], [79, "module-pe.logger.csv_print"], [80, "module-pe.logger.image_file"], [81, "module-pe.logger.log_print"], [82, "module-pe.logger.logger"], [83, "module-pe.logger.matplotlib_pdf"], [84, "module-pe.logging"], [85, "module-pe.metric_item"], [86, "module-pe.population"], [87, "module-pe.population.pe_population"], [88, "module-pe.population.population"], [89, "module-pe.runner"], [90, "module-pe.runner.pe"], [91, "module-pe.util"], [92, "module-pe.util.download"]], "pe": [[2, "module-pe"]], "api (class in pe.api.api)": [[4, "pe.api.api.API"]], "pe.api.api": [[4, "module-pe.api.api"]], "random_api() (pe.api.api.api method)": [[4, "pe.api.api.API.random_api"]], "variation_api() (pe.api.api.api method)": [[4, "pe.api.api.API.variation_api"]], "drawtext (class in pe.api.image.draw_text_api)": [[7, "pe.api.image.draw_text_api.DrawText"]], "__init__() (pe.api.image.draw_text_api.drawtext method)": [[7, "pe.api.image.draw_text_api.DrawText.__init__"]], "_create_image() (pe.api.image.draw_text_api.drawtext method)": [[7, "pe.api.image.draw_text_api.DrawText._create_image"]], "_get_random_image() (pe.api.image.draw_text_api.drawtext method)": [[7, "pe.api.image.draw_text_api.DrawText._get_random_image"]], "_get_variation_image() (pe.api.image.draw_text_api.drawtext method)": [[7, "pe.api.image.draw_text_api.DrawText._get_variation_image"]], "pe.api.image.draw_text_api": [[7, "module-pe.api.image.draw_text_api"]], "random_api() (pe.api.image.draw_text_api.drawtext method)": [[7, "pe.api.image.draw_text_api.DrawText.random_api"]], "variation_api() (pe.api.image.draw_text_api.drawtext method)": [[7, "pe.api.image.draw_text_api.DrawText.variation_api"]], "checkpoint_url (pe.api.image.improved_diffusion_api.improveddiffusion270m attribute)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion270M.CHECKPOINT_URL"]], "improveddiffusion (class in pe.api.image.improved_diffusion_api)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion"]], "improveddiffusion270m (class in pe.api.image.improved_diffusion_api)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion270M"]], "sampler (class in pe.api.image.improved_diffusion_api)": [[8, "pe.api.image.improved_diffusion_api.Sampler"]], "__init__() (pe.api.image.improved_diffusion_api.improveddiffusion method)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion.__init__"]], "__init__() (pe.api.image.improved_diffusion_api.improveddiffusion270m method)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion270M.__init__"]], "forward() (pe.api.image.improved_diffusion_api.sampler method)": [[8, "pe.api.image.improved_diffusion_api.Sampler.forward"]], "pe.api.image.improved_diffusion_api": [[8, "module-pe.api.image.improved_diffusion_api"]], "random_api() (pe.api.image.improved_diffusion_api.improveddiffusion method)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion.random_api"]], "sample() (in module pe.api.image.improved_diffusion_api)": [[8, "pe.api.image.improved_diffusion_api.sample"]], "training (pe.api.image.improved_diffusion_api.sampler attribute)": [[8, "pe.api.image.improved_diffusion_api.Sampler.training"]], "variation_api() (pe.api.image.improved_diffusion_api.improveddiffusion method)": [[8, "pe.api.image.improved_diffusion_api.ImprovedDiffusion.variation_api"]], "pe.api.image.improved_diffusion_lib": [[9, "module-pe.api.image.improved_diffusion_lib"]], "create_gaussian_diffusion() (in module pe.api.image.improved_diffusion_lib.gaussian_diffusion)": [[10, "pe.api.image.improved_diffusion_lib.gaussian_diffusion.create_gaussian_diffusion"]], "pe.api.image.improved_diffusion_lib.gaussian_diffusion": [[10, "module-pe.api.image.improved_diffusion_lib.gaussian_diffusion"]], "create_model() (in module pe.api.image.improved_diffusion_lib.unet)": [[11, "pe.api.image.improved_diffusion_lib.unet.create_model"]], "pe.api.image.improved_diffusion_lib.unet": [[11, "module-pe.api.image.improved_diffusion_lib.unet"]], "stablediffusion (class in pe.api.image.stable_diffusion_api)": [[13, "pe.api.image.stable_diffusion_api.StableDiffusion"]], "__init__() (pe.api.image.stable_diffusion_api.stablediffusion method)": [[13, "pe.api.image.stable_diffusion_api.StableDiffusion.__init__"]], "pe.api.image.stable_diffusion_api": [[13, "module-pe.api.image.stable_diffusion_api"]], "random_api() (pe.api.image.stable_diffusion_api.stablediffusion method)": [[13, "pe.api.image.stable_diffusion_api.StableDiffusion.random_api"]], "variation_api() (pe.api.image.stable_diffusion_api.stablediffusion method)": [[13, "pe.api.image.stable_diffusion_api.StableDiffusion.variation_api"]], "constantlist (class in pe.api.util)": [[16, "pe.api.util.ConstantList"]], "pe.api.util": [[16, "module-pe.api.util"]], "callback (class in pe.callback)": [[17, "pe.callback.Callback"]], "computefid (class in pe.callback)": [[17, "pe.callback.ComputeFID"]], "computeprecisionrecall (class in pe.callback)": [[17, "pe.callback.ComputePrecisionRecall"]], "dpimagebenchclassifyimages (class in pe.callback)": [[17, "pe.callback.DPImageBenchClassifyImages"]], "sampleimages (class in pe.callback)": [[17, "pe.callback.SampleImages"]], "saveallimages (class in pe.callback)": [[17, "pe.callback.SaveAllImages"]], "savecheckpoints (class in pe.callback)": [[17, "pe.callback.SaveCheckpoints"]], "savetexttocsv (class in pe.callback)": [[17, "pe.callback.SaveTextToCSV"]], "__call__() (pe.callback.callback method)": [[17, "pe.callback.Callback.__call__"]], "__call__() (pe.callback.computefid method)": [[17, "pe.callback.ComputeFID.__call__"]], "__call__() (pe.callback.computeprecisionrecall method)": [[17, "pe.callback.ComputePrecisionRecall.__call__"]], "__call__() (pe.callback.dpimagebenchclassifyimages method)": [[17, "pe.callback.DPImageBenchClassifyImages.__call__"]], "__call__() (pe.callback.sampleimages method)": [[17, "pe.callback.SampleImages.__call__"]], "__call__() (pe.callback.saveallimages method)": [[17, "pe.callback.SaveAllImages.__call__"]], "__call__() (pe.callback.savecheckpoints method)": [[17, "pe.callback.SaveCheckpoints.__call__"]], "__call__() (pe.callback.savetexttocsv method)": [[17, "pe.callback.SaveTextToCSV.__call__"]], "__init__() (pe.callback.computefid method)": [[17, "pe.callback.ComputeFID.__init__"]], "__init__() (pe.callback.computeprecisionrecall method)": [[17, "pe.callback.ComputePrecisionRecall.__init__"]], "__init__() (pe.callback.dpimagebenchclassifyimages method)": [[17, "pe.callback.DPImageBenchClassifyImages.__init__"]], "__init__() (pe.callback.sampleimages method)": [[17, "pe.callback.SampleImages.__init__"]], "__init__() (pe.callback.saveallimages method)": [[17, "pe.callback.SaveAllImages.__init__"]], "__init__() (pe.callback.savecheckpoints method)": [[17, "pe.callback.SaveCheckpoints.__init__"]], "__init__() (pe.callback.savetexttocsv method)": [[17, "pe.callback.SaveTextToCSV.__init__"]], "_get_checkpoint_path() (pe.callback.savecheckpoints method)": [[17, "pe.callback.SaveCheckpoints._get_checkpoint_path"]], "_get_csv_path() (pe.callback.savetexttocsv method)": [[17, "pe.callback.SaveTextToCSV._get_csv_path"]], "_get_data_loader() (pe.callback.dpimagebenchclassifyimages method)": [[17, "pe.callback.DPImageBenchClassifyImages._get_data_loader"]], "_get_images_and_label_from_data() (pe.callback.dpimagebenchclassifyimages method)": [[17, "pe.callback.DPImageBenchClassifyImages._get_images_and_label_from_data"]], "_get_model() (pe.callback.dpimagebenchclassifyimages method)": [[17, "pe.callback.DPImageBenchClassifyImages._get_model"]], "_save_image() (pe.callback.saveallimages method)": [[17, "pe.callback.SaveAllImages._save_image"]], "evaluate() (pe.callback.dpimagebenchclassifyimages method)": [[17, "pe.callback.DPImageBenchClassifyImages.evaluate"]], "pe.callback": [[17, "module-pe.callback"]], "callback (class in pe.callback.callback)": [[18, "pe.callback.callback.Callback"]], "__call__() (pe.callback.callback.callback method)": [[18, "pe.callback.callback.Callback.__call__"]], "pe.callback.callback": [[18, "module-pe.callback.callback"]], "pe.callback.common": [[19, "module-pe.callback.common"]], "computefid (class in pe.callback.common.compute_fid)": [[20, "pe.callback.common.compute_fid.ComputeFID"]], "__call__() (pe.callback.common.compute_fid.computefid method)": [[20, "pe.callback.common.compute_fid.ComputeFID.__call__"]], "__init__() (pe.callback.common.compute_fid.computefid method)": [[20, "pe.callback.common.compute_fid.ComputeFID.__init__"]], "pe.callback.common.compute_fid": [[20, "module-pe.callback.common.compute_fid"]], "computeprecisionrecall (class in pe.callback.common.compute_precision_recall)": [[21, "pe.callback.common.compute_precision_recall.ComputePrecisionRecall"]], "__call__() (pe.callback.common.compute_precision_recall.computeprecisionrecall method)": [[21, "pe.callback.common.compute_precision_recall.ComputePrecisionRecall.__call__"]], "__init__() (pe.callback.common.compute_precision_recall.computeprecisionrecall method)": [[21, "pe.callback.common.compute_precision_recall.ComputePrecisionRecall.__init__"]], "pe.callback.common.compute_precision_recall": [[21, "module-pe.callback.common.compute_precision_recall"]], "savecheckpoints (class in pe.callback.common.save_checkpoints)": [[22, "pe.callback.common.save_checkpoints.SaveCheckpoints"]], "__call__() (pe.callback.common.save_checkpoints.savecheckpoints method)": [[22, "pe.callback.common.save_checkpoints.SaveCheckpoints.__call__"]], "__init__() (pe.callback.common.save_checkpoints.savecheckpoints method)": [[22, "pe.callback.common.save_checkpoints.SaveCheckpoints.__init__"]], "_get_checkpoint_path() (pe.callback.common.save_checkpoints.savecheckpoints method)": [[22, "pe.callback.common.save_checkpoints.SaveCheckpoints._get_checkpoint_path"]], "pe.callback.common.save_checkpoints": [[22, "module-pe.callback.common.save_checkpoints"]], "pe.callback.image": [[23, "module-pe.callback.image"]], "dpimagebenchclassifyimages (class in pe.callback.image.dpimagebench_classify_images)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages"]], "__call__() (pe.callback.image.dpimagebench_classify_images.dpimagebenchclassifyimages method)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages.__call__"]], "__init__() (pe.callback.image.dpimagebench_classify_images.dpimagebenchclassifyimages method)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages.__init__"]], "_get_data_loader() (pe.callback.image.dpimagebench_classify_images.dpimagebenchclassifyimages method)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages._get_data_loader"]], "_get_images_and_label_from_data() (pe.callback.image.dpimagebench_classify_images.dpimagebenchclassifyimages method)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages._get_images_and_label_from_data"]], "_get_model() (pe.callback.image.dpimagebench_classify_images.dpimagebenchclassifyimages method)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages._get_model"]], "evaluate() (pe.callback.image.dpimagebench_classify_images.dpimagebenchclassifyimages method)": [[24, "pe.callback.image.dpimagebench_classify_images.DPImageBenchClassifyImages.evaluate"]], "pe.callback.image.dpimagebench_classify_images": [[24, "module-pe.callback.image.dpimagebench_classify_images"]], "pe.callback.image.dpimagebench_lib": [[25, "module-pe.callback.image.dpimagebench_lib"]], "densenet() (in module pe.callback.image.dpimagebench_lib.densenet)": [[26, "pe.callback.image.dpimagebench_lib.densenet.densenet"]], "pe.callback.image.dpimagebench_lib.densenet": [[26, "module-pe.callback.image.dpimagebench_lib.densenet"]], "exponentialmovingaverage (class in pe.callback.image.dpimagebench_lib.ema)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage"]], "__init__() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.__init__"]], "copy_to() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.copy_to"]], "load_state_dict() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.load_state_dict"]], "pe.callback.image.dpimagebench_lib.ema": [[27, "module-pe.callback.image.dpimagebench_lib.ema"]], "restore() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.restore"]], "state_dict() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.state_dict"]], "store() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.store"]], "update() (pe.callback.image.dpimagebench_lib.ema.exponentialmovingaverage method)": [[27, "pe.callback.image.dpimagebench_lib.ema.ExponentialMovingAverage.update"]], "pe.callback.image.dpimagebench_lib.resnet": [[28, "module-pe.callback.image.dpimagebench_lib.resnet"]], "resnet() (in module pe.callback.image.dpimagebench_lib.resnet)": [[28, "pe.callback.image.dpimagebench_lib.resnet.resnet"]], "pe.callback.image.dpimagebench_lib.resnext": [[29, "module-pe.callback.image.dpimagebench_lib.resnext"]], "resnext() (in module pe.callback.image.dpimagebench_lib.resnext)": [[29, "pe.callback.image.dpimagebench_lib.resnext.resnext"]], "basicblock (class in pe.callback.image.dpimagebench_lib.wrn)": [[30, "pe.callback.image.dpimagebench_lib.wrn.BasicBlock"]], "networkblock (class in pe.callback.image.dpimagebench_lib.wrn)": [[30, "pe.callback.image.dpimagebench_lib.wrn.NetworkBlock"]], "wideresnet (class in pe.callback.image.dpimagebench_lib.wrn)": [[30, "pe.callback.image.dpimagebench_lib.wrn.WideResNet"]], "forward() (pe.callback.image.dpimagebench_lib.wrn.basicblock method)": [[30, "pe.callback.image.dpimagebench_lib.wrn.BasicBlock.forward"]], "forward() (pe.callback.image.dpimagebench_lib.wrn.networkblock method)": [[30, "pe.callback.image.dpimagebench_lib.wrn.NetworkBlock.forward"]], "forward() (pe.callback.image.dpimagebench_lib.wrn.wideresnet method)": [[30, "pe.callback.image.dpimagebench_lib.wrn.WideResNet.forward"]], "pe.callback.image.dpimagebench_lib.wrn": [[30, "module-pe.callback.image.dpimagebench_lib.wrn"]], "training (pe.callback.image.dpimagebench_lib.wrn.basicblock attribute)": [[30, "pe.callback.image.dpimagebench_lib.wrn.BasicBlock.training"]], "training (pe.callback.image.dpimagebench_lib.wrn.networkblock attribute)": [[30, "pe.callback.image.dpimagebench_lib.wrn.NetworkBlock.training"]], "training (pe.callback.image.dpimagebench_lib.wrn.wideresnet attribute)": [[30, "pe.callback.image.dpimagebench_lib.wrn.WideResNet.training"]], "sampleimages (class in pe.callback.image.sample_images)": [[31, "pe.callback.image.sample_images.SampleImages"]], "__call__() (pe.callback.image.sample_images.sampleimages method)": [[31, "pe.callback.image.sample_images.SampleImages.__call__"]], "__init__() (pe.callback.image.sample_images.sampleimages method)": [[31, "pe.callback.image.sample_images.SampleImages.__init__"]], "pe.callback.image.sample_images": [[31, "module-pe.callback.image.sample_images"]], "saveallimages (class in pe.callback.image.save_all_images)": [[32, "pe.callback.image.save_all_images.SaveAllImages"]], "__call__() (pe.callback.image.save_all_images.saveallimages method)": [[32, "pe.callback.image.save_all_images.SaveAllImages.__call__"]], "__init__() (pe.callback.image.save_all_images.saveallimages method)": [[32, "pe.callback.image.save_all_images.SaveAllImages.__init__"]], "_save_image() (pe.callback.image.save_all_images.saveallimages method)": [[32, "pe.callback.image.save_all_images.SaveAllImages._save_image"]], "pe.callback.image.save_all_images": [[32, "module-pe.callback.image.save_all_images"]], "pe.callback.text": [[33, "module-pe.callback.text"]], "savetexttocsv (class in pe.callback.text.save_text_to_csv)": [[34, "pe.callback.text.save_text_to_csv.SaveTextToCSV"]], "__call__() (pe.callback.text.save_text_to_csv.savetexttocsv method)": [[34, "pe.callback.text.save_text_to_csv.SaveTextToCSV.__call__"]], "__init__() (pe.callback.text.save_text_to_csv.savetexttocsv method)": [[34, "pe.callback.text.save_text_to_csv.SaveTextToCSV.__init__"]], "_get_csv_path() (pe.callback.text.save_text_to_csv.savetexttocsv method)": [[34, "pe.callback.text.save_text_to_csv.SaveTextToCSV._get_csv_path"]], "pe.callback.text.save_text_to_csv": [[34, "module-pe.callback.text.save_text_to_csv"]], "pe.constant": [[35, "module-pe.constant"]], "clean_histogram_column_name (in module pe.constant.data)": [[36, "pe.constant.data.CLEAN_HISTOGRAM_COLUMN_NAME"]], "dp_histogram_column_name (in module pe.constant.data)": [[36, "pe.constant.data.DP_HISTOGRAM_COLUMN_NAME"]], "embedding_column_name (in module pe.constant.data)": [[36, "pe.constant.data.EMBEDDING_COLUMN_NAME"]], "from_last_flag_column_name (in module pe.constant.data)": [[36, "pe.constant.data.FROM_LAST_FLAG_COLUMN_NAME"]], "histogram_nearest_neighbors_voting_ids_column_name (in module pe.constant.data)": [[36, "pe.constant.data.HISTOGRAM_NEAREST_NEIGHBORS_VOTING_IDS_COLUMN_NAME"]], "image_data_column_name (in module pe.constant.data)": [[36, "pe.constant.data.IMAGE_DATA_COLUMN_NAME"]], "image_model_label_column_name (in module pe.constant.data)": [[36, "pe.constant.data.IMAGE_MODEL_LABEL_COLUMN_NAME"]], "image_prompt_column_name (in module pe.constant.data)": [[36, "pe.constant.data.IMAGE_PROMPT_COLUMN_NAME"]], "label_id_column_name (in module pe.constant.data)": [[36, "pe.constant.data.LABEL_ID_COLUMN_NAME"]], "llm_parameters_column_name (in module pe.constant.data)": [[36, "pe.constant.data.LLM_PARAMETERS_COLUMN_NAME"]], "llm_request_messages_column_name (in module pe.constant.data)": [[36, "pe.constant.data.LLM_REQUEST_MESSAGES_COLUMN_NAME"]], "lookahead_embedding_column_name (in module pe.constant.data)": [[36, "pe.constant.data.LOOKAHEAD_EMBEDDING_COLUMN_NAME"]], "parent_syn_data_index_column_name (in module pe.constant.data)": [[36, "pe.constant.data.PARENT_SYN_DATA_INDEX_COLUMN_NAME"]], "post_processed_dp_histogram_column_name (in module pe.constant.data)": [[36, "pe.constant.data.POST_PROCESSED_DP_HISTOGRAM_COLUMN_NAME"]], "text_data_column_name (in module pe.constant.data)": [[36, "pe.constant.data.TEXT_DATA_COLUMN_NAME"]], "variation_api_fold_id_column_name (in module pe.constant.data)": [[36, "pe.constant.data.VARIATION_API_FOLD_ID_COLUMN_NAME"]], "pe.constant.data": [[36, "module-pe.constant.data"]], "camelyon17 (class in pe.data)": [[37, "pe.data.Camelyon17"]], "cat (class in pe.data)": [[37, "pe.data.Cat"]], "celeba (class in pe.data)": [[37, "pe.data.CelebA"]], "cifar10 (class in pe.data)": [[37, "pe.data.Cifar10"]], "download_info_dict (pe.data.openreview attribute)": [[37, "pe.data.OpenReview.DOWNLOAD_INFO_DICT"]], "download_info_dict (pe.data.pubmed attribute)": [[37, "pe.data.PubMed.DOWNLOAD_INFO_DICT"]], "download_info_dict (pe.data.yelp attribute)": [[37, "pe.data.Yelp.DOWNLOAD_INFO_DICT"]], "data (class in pe.data)": [[37, "pe.data.Data"]], "digiface1m (class in pe.data)": [[37, "pe.data.DigiFace1M"]], "mnist (class in pe.data)": [[37, "pe.data.MNIST"]], "openreview (class in pe.data)": [[37, "pe.data.OpenReview"]], "pubmed (class in pe.data)": [[37, "pe.data.PubMed"]], "textcsv (class in pe.data)": [[37, "pe.data.TextCSV"]], "url (pe.data.cat attribute)": [[37, "pe.data.Cat.URL"]], "yelp (class in pe.data)": [[37, "pe.data.Yelp"]], "__init__() (pe.data.camelyon17 method)": [[37, "pe.data.Camelyon17.__init__"]], "__init__() (pe.data.cat method)": [[37, "pe.data.Cat.__init__"]], "__init__() (pe.data.celeba method)": [[37, "pe.data.CelebA.__init__"]], "__init__() (pe.data.cifar10 method)": [[37, "pe.data.Cifar10.__init__"]], "__init__() (pe.data.data method)": [[37, "pe.data.Data.__init__"]], "__init__() (pe.data.digiface1m method)": [[37, "pe.data.DigiFace1M.__init__"]], "__init__() (pe.data.mnist method)": [[37, "pe.data.MNIST.__init__"]], "__init__() (pe.data.openreview method)": [[37, "pe.data.OpenReview.__init__"]], "__init__() (pe.data.pubmed method)": [[37, "pe.data.PubMed.__init__"]], "__init__() (pe.data.textcsv method)": [[37, "pe.data.TextCSV.__init__"]], "__init__() (pe.data.yelp method)": [[37, "pe.data.Yelp.__init__"]], "_download() (pe.data.cat method)": [[37, "pe.data.Cat._download"]], "_download() (pe.data.openreview method)": [[37, "pe.data.OpenReview._download"]], "_download() (pe.data.pubmed method)": [[37, "pe.data.PubMed._download"]], "_download() (pe.data.yelp method)": [[37, "pe.data.Yelp._download"]], "_read_and_process_image() (pe.data.digiface1m method)": [[37, "pe.data.DigiFace1M._read_and_process_image"]], "_read_data() (pe.data.cat method)": [[37, "pe.data.Cat._read_data"]], "concat() (pe.data.data class method)": [[37, "pe.data.Data.concat"]], "filter() (pe.data.data method)": [[37, "pe.data.Data.filter"]], "filter_label_id() (pe.data.data method)": [[37, "pe.data.Data.filter_label_id"]], "load_checkpoint() (pe.data.data method)": [[37, "pe.data.Data.load_checkpoint"]], "load_image_folder() (in module pe.data)": [[37, "pe.data.load_image_folder"]], "merge() (pe.data.data method)": [[37, "pe.data.Data.merge"]], "pe.data": [[37, "module-pe.data"]], "random_split() (pe.data.data method)": [[37, "pe.data.Data.random_split"]], "random_truncate() (pe.data.data method)": [[37, "pe.data.Data.random_truncate"]], "save_checkpoint() (pe.data.data method)": [[37, "pe.data.Data.save_checkpoint"]], "set_label_id() (pe.data.data method)": [[37, "pe.data.Data.set_label_id"]], "truncate() (pe.data.data method)": [[37, "pe.data.Data.truncate"]], "data (class in pe.data.data)": [[38, "pe.data.data.Data"]], "__init__() (pe.data.data.data method)": [[38, "pe.data.data.Data.__init__"]], "concat() (pe.data.data.data class method)": [[38, "pe.data.data.Data.concat"]], "filter() (pe.data.data.data method)": [[38, "pe.data.data.Data.filter"]], "filter_label_id() (pe.data.data.data method)": [[38, "pe.data.data.Data.filter_label_id"]], "load_checkpoint() (pe.data.data.data method)": [[38, "pe.data.data.Data.load_checkpoint"]], "merge() (pe.data.data.data method)": [[38, "pe.data.data.Data.merge"]], "pe.data.data": [[38, "module-pe.data.data"]], "random_split() (pe.data.data.data method)": [[38, "pe.data.data.Data.random_split"]], "random_truncate() (pe.data.data.data method)": [[38, "pe.data.data.Data.random_truncate"]], "save_checkpoint() (pe.data.data.data method)": [[38, "pe.data.data.Data.save_checkpoint"]], "set_label_id() (pe.data.data.data method)": [[38, "pe.data.data.Data.set_label_id"]], "truncate() (pe.data.data.data method)": [[38, "pe.data.data.Data.truncate"]], "pe.data.image": [[39, "module-pe.data.image"]], "camelyon17 (class in pe.data.image.camelyon17)": [[40, "pe.data.image.camelyon17.Camelyon17"]], "__init__() (pe.data.image.camelyon17.camelyon17 method)": [[40, "pe.data.image.camelyon17.Camelyon17.__init__"]], "pe.data.image.camelyon17": [[40, "module-pe.data.image.camelyon17"]], "cat (class in pe.data.image.cat)": [[41, "pe.data.image.cat.Cat"]], "url (pe.data.image.cat.cat attribute)": [[41, "pe.data.image.cat.Cat.URL"]], "__init__() (pe.data.image.cat.cat method)": [[41, "pe.data.image.cat.Cat.__init__"]], "_download() (pe.data.image.cat.cat method)": [[41, "pe.data.image.cat.Cat._download"]], "_read_data() (pe.data.image.cat.cat method)": [[41, "pe.data.image.cat.Cat._read_data"]], "pe.data.image.cat": [[41, "module-pe.data.image.cat"]], "celeba (class in pe.data.image.celeba)": [[42, "pe.data.image.celeba.CelebA"]], "__init__() (pe.data.image.celeba.celeba method)": [[42, "pe.data.image.celeba.CelebA.__init__"]], "pe.data.image.celeba": [[42, "module-pe.data.image.celeba"]], "target_transform (class in pe.data.image.celeba)": [[42, "pe.data.image.celeba.target_transform"]], "cifar10 (class in pe.data.image.cifar10)": [[43, "pe.data.image.cifar10.Cifar10"]], "__init__() (pe.data.image.cifar10.cifar10 method)": [[43, "pe.data.image.cifar10.Cifar10.__init__"]], "pe.data.image.cifar10": [[43, "module-pe.data.image.cifar10"]], "digiface1m (class in pe.data.image.digiface1m)": [[44, "pe.data.image.digiface1m.DigiFace1M"]], "__init__() (pe.data.image.digiface1m.digiface1m method)": [[44, "pe.data.image.digiface1m.DigiFace1M.__init__"]], "_read_and_process_image() (pe.data.image.digiface1m.digiface1m method)": [[44, "pe.data.image.digiface1m.DigiFace1M._read_and_process_image"]], "pe.data.image.digiface1m": [[44, "module-pe.data.image.digiface1m"]], "imagedataset (class in pe.data.image.image)": [[45, "pe.data.image.image.ImageDataset"]], "_list_image_files_recursively() (in module pe.data.image.image)": [[45, "pe.data.image.image._list_image_files_recursively"]], "load_image_folder() (in module pe.data.image.image)": [[45, "pe.data.image.image.load_image_folder"]], "pe.data.image.image": [[45, "module-pe.data.image.image"]], "mnist (class in pe.data.image.mnist)": [[46, "pe.data.image.mnist.MNIST"]], "__init__() (pe.data.image.mnist.mnist method)": [[46, "pe.data.image.mnist.MNIST.__init__"]], "pe.data.image.mnist": [[46, "module-pe.data.image.mnist"]], "pe.data.text": [[47, "module-pe.data.text"]], "download_info_dict (pe.data.text.openreview.openreview attribute)": [[48, "pe.data.text.openreview.OpenReview.DOWNLOAD_INFO_DICT"]], "downloadinfo (namedtuple in pe.data.text.openreview)": [[48, "pe.data.text.openreview.DownloadInfo"], [48, "pe.data.text.openreview.DownloadInfo.type"], [48, "pe.data.text.openreview.DownloadInfo.url"]], "openreview (class in pe.data.text.openreview)": [[48, "pe.data.text.openreview.OpenReview"]], "__init__() (pe.data.text.openreview.openreview method)": [[48, "pe.data.text.openreview.OpenReview.__init__"]], "_download() (pe.data.text.openreview.openreview method)": [[48, "pe.data.text.openreview.OpenReview._download"]], "pe.data.text.openreview": [[48, "module-pe.data.text.openreview"]], "type (namedtuple field)": [[48, "pe.data.text.openreview.DownloadInfo.type"], [49, "pe.data.text.pubmed.DownloadInfo.type"], [51, "pe.data.text.yelp.DownloadInfo.type"]], "url (namedtuple field)": [[48, "pe.data.text.openreview.DownloadInfo.url"], [49, "pe.data.text.pubmed.DownloadInfo.url"], [51, "pe.data.text.yelp.DownloadInfo.url"]], "download_info_dict (pe.data.text.pubmed.pubmed attribute)": [[49, "pe.data.text.pubmed.PubMed.DOWNLOAD_INFO_DICT"]], "downloadinfo (namedtuple in pe.data.text.pubmed)": [[49, "pe.data.text.pubmed.DownloadInfo"], [49, "pe.data.text.pubmed.DownloadInfo.type"], [49, "pe.data.text.pubmed.DownloadInfo.url"]], "pubmed (class in pe.data.text.pubmed)": [[49, "pe.data.text.pubmed.PubMed"]], "__init__() (pe.data.text.pubmed.pubmed method)": [[49, "pe.data.text.pubmed.PubMed.__init__"]], "_download() (pe.data.text.pubmed.pubmed method)": [[49, "pe.data.text.pubmed.PubMed._download"]], "pe.data.text.pubmed": [[49, "module-pe.data.text.pubmed"]], "textcsv (class in pe.data.text.text_csv)": [[50, "pe.data.text.text_csv.TextCSV"]], "__init__() (pe.data.text.text_csv.textcsv method)": [[50, "pe.data.text.text_csv.TextCSV.__init__"]], "pe.data.text.text_csv": [[50, "module-pe.data.text.text_csv"]], "download_info_dict (pe.data.text.yelp.yelp attribute)": [[51, "pe.data.text.yelp.Yelp.DOWNLOAD_INFO_DICT"]], "downloadinfo (namedtuple in pe.data.text.yelp)": [[51, "pe.data.text.yelp.DownloadInfo"], [51, "pe.data.text.yelp.DownloadInfo.type"], [51, "pe.data.text.yelp.DownloadInfo.url"]], "yelp (class in pe.data.text.yelp)": [[51, "pe.data.text.yelp.Yelp"]], "__init__() (pe.data.text.yelp.yelp method)": [[51, "pe.data.text.yelp.Yelp.__init__"]], "_download() (pe.data.text.yelp.yelp method)": [[51, "pe.data.text.yelp.Yelp._download"]], "pe.data.text.yelp": [[51, "module-pe.data.text.yelp"]], "dp (class in pe.dp)": [[52, "pe.dp.DP"]], "gaussian (class in pe.dp)": [[52, "pe.dp.Gaussian"]], "add_noise() (pe.dp.dp method)": [[52, "pe.dp.DP.add_noise"]], "add_noise() (pe.dp.gaussian method)": [[52, "pe.dp.Gaussian.add_noise"]], "pe.dp": [[52, "module-pe.dp"]], "set_epsilon_and_delta() (pe.dp.dp method)": [[52, "pe.dp.DP.set_epsilon_and_delta"]], "set_epsilon_and_delta() (pe.dp.gaussian method)": [[52, "pe.dp.Gaussian.set_epsilon_and_delta"]], "dp (class in pe.dp.dp)": [[53, "pe.dp.dp.DP"]], "add_noise() (pe.dp.dp.dp method)": [[53, "pe.dp.dp.DP.add_noise"]], "pe.dp.dp": [[53, "module-pe.dp.dp"]], "set_epsilon_and_delta() (pe.dp.dp.dp method)": [[53, "pe.dp.dp.DP.set_epsilon_and_delta"]], "gaussian (class in pe.dp.gaussian)": [[54, "pe.dp.gaussian.Gaussian"]], "add_noise() (pe.dp.gaussian.gaussian method)": [[54, "pe.dp.gaussian.Gaussian.add_noise"]], "compute_epsilon() (in module pe.dp.gaussian)": [[54, "pe.dp.gaussian.compute_epsilon"]], "delta_gaussian() (in module pe.dp.gaussian)": [[54, "pe.dp.gaussian.delta_Gaussian"]], "eps_gaussian() (in module pe.dp.gaussian)": [[54, "pe.dp.gaussian.eps_Gaussian"]], "get_noise_multiplier() (in module pe.dp.gaussian)": [[54, "pe.dp.gaussian.get_noise_multiplier"]], "pe.dp.gaussian": [[54, "module-pe.dp.gaussian"]], "set_epsilon_and_delta() (pe.dp.gaussian.gaussian method)": [[54, "pe.dp.gaussian.Gaussian.set_epsilon_and_delta"]], "embedding (class in pe.embedding)": [[55, "pe.embedding.Embedding"]], "fldinception (class in pe.embedding)": [[55, "pe.embedding.FLDInception"]], "inception (class in pe.embedding)": [[55, "pe.embedding.Inception"]], "sentencetransformer (class in pe.embedding)": [[55, "pe.embedding.SentenceTransformer"]], "__init__() (pe.embedding.fldinception method)": [[55, "pe.embedding.FLDInception.__init__"]], "__init__() (pe.embedding.inception method)": [[55, "pe.embedding.Inception.__init__"]], "__init__() (pe.embedding.sentencetransformer method)": [[55, "pe.embedding.SentenceTransformer.__init__"]], "column_name (pe.embedding.embedding property)": [[55, "pe.embedding.Embedding.column_name"]], "column_name (pe.embedding.sentencetransformer property)": [[55, "pe.embedding.SentenceTransformer.column_name"]], "compute_embedding() (pe.embedding.embedding method)": [[55, "pe.embedding.Embedding.compute_embedding"]], "compute_embedding() (pe.embedding.fldinception method)": [[55, "pe.embedding.FLDInception.compute_embedding"]], "compute_embedding() (pe.embedding.inception method)": [[55, "pe.embedding.Inception.compute_embedding"]], "compute_embedding() (pe.embedding.sentencetransformer method)": [[55, "pe.embedding.SentenceTransformer.compute_embedding"]], "filter_uncomputed_rows() (pe.embedding.embedding method)": [[55, "pe.embedding.Embedding.filter_uncomputed_rows"]], "merge_computed_rows() (pe.embedding.embedding method)": [[55, "pe.embedding.Embedding.merge_computed_rows"]], "pe.embedding": [[55, "module-pe.embedding"]], "embedding (class in pe.embedding.embedding)": [[56, "pe.embedding.embedding.Embedding"]], "column_name (pe.embedding.embedding.embedding property)": [[56, "pe.embedding.embedding.Embedding.column_name"]], "compute_embedding() (pe.embedding.embedding.embedding method)": [[56, "pe.embedding.embedding.Embedding.compute_embedding"]], "filter_uncomputed_rows() (pe.embedding.embedding.embedding method)": [[56, "pe.embedding.embedding.Embedding.filter_uncomputed_rows"]], "merge_computed_rows() (pe.embedding.embedding.embedding method)": [[56, "pe.embedding.embedding.Embedding.merge_computed_rows"]], "pe.embedding.embedding": [[56, "module-pe.embedding.embedding"]], "pe.embedding.image": [[57, "module-pe.embedding.image"]], "fldinception (class in pe.embedding.image.fld_inception)": [[58, "pe.embedding.image.fld_inception.FLDInception"]], "__init__() (pe.embedding.image.fld_inception.fldinception method)": [[58, "pe.embedding.image.fld_inception.FLDInception.__init__"]], "compute_embedding() (pe.embedding.image.fld_inception.fldinception method)": [[58, "pe.embedding.image.fld_inception.FLDInception.compute_embedding"]], "pe.embedding.image.fld_inception": [[58, "module-pe.embedding.image.fld_inception"]], "to_uint8() (in module pe.embedding.image.fld_inception)": [[58, "pe.embedding.image.fld_inception.to_uint8"]], "inception (class in pe.embedding.image.inception)": [[59, "pe.embedding.image.inception.Inception"]], "__init__() (pe.embedding.image.inception.inception method)": [[59, "pe.embedding.image.inception.Inception.__init__"]], "compute_embedding() (pe.embedding.image.inception.inception method)": [[59, "pe.embedding.image.inception.Inception.compute_embedding"]], "pe.embedding.image.inception": [[59, "module-pe.embedding.image.inception"]], "to_uint8() (in module pe.embedding.image.inception)": [[59, "pe.embedding.image.inception.to_uint8"]], "pe.embedding.text": [[60, "module-pe.embedding.text"]], "sentencetransformer (class in pe.embedding.text.sentence_transformer)": [[61, "pe.embedding.text.sentence_transformer.SentenceTransformer"]], "__init__() (pe.embedding.text.sentence_transformer.sentencetransformer method)": [[61, "pe.embedding.text.sentence_transformer.SentenceTransformer.__init__"]], "column_name (pe.embedding.text.sentence_transformer.sentencetransformer property)": [[61, "pe.embedding.text.sentence_transformer.SentenceTransformer.column_name"]], "compute_embedding() (pe.embedding.text.sentence_transformer.sentencetransformer method)": [[61, "pe.embedding.text.sentence_transformer.SentenceTransformer.compute_embedding"]], "pe.embedding.text.sentence_transformer": [[61, "module-pe.embedding.text.sentence_transformer"]], "histogram (class in pe.histogram)": [[62, "pe.histogram.Histogram"]], "nearestneighbors (class in pe.histogram)": [[62, "pe.histogram.NearestNeighbors"]], "__init__() (pe.histogram.nearestneighbors method)": [[62, "pe.histogram.NearestNeighbors.__init__"]], "_compute_lookahead_embedding() (pe.histogram.nearestneighbors method)": [[62, "pe.histogram.NearestNeighbors._compute_lookahead_embedding"]], "_log_lookahead() (pe.histogram.nearestneighbors method)": [[62, "pe.histogram.NearestNeighbors._log_lookahead"]], "_log_voting_details() (pe.histogram.nearestneighbors method)": [[62, "pe.histogram.NearestNeighbors._log_voting_details"]], "compute_histogram() (pe.histogram.histogram method)": [[62, "pe.histogram.Histogram.compute_histogram"]], "compute_histogram() (pe.histogram.nearestneighbors method)": [[62, "pe.histogram.NearestNeighbors.compute_histogram"]], "pe.histogram": [[62, "module-pe.histogram"]], "histogram (class in pe.histogram.histogram)": [[63, "pe.histogram.histogram.Histogram"]], "compute_histogram() (pe.histogram.histogram.histogram method)": [[63, "pe.histogram.histogram.Histogram.compute_histogram"]], "pe.histogram.histogram": [[63, "module-pe.histogram.histogram"]], "pe.histogram.nearest_neighbor_backend": [[64, "module-pe.histogram.nearest_neighbor_backend"]], "pe.histogram.nearest_neighbor_backend.auto": [[65, "module-pe.histogram.nearest_neighbor_backend.auto"]], "search() (in module pe.histogram.nearest_neighbor_backend.auto)": [[65, "pe.histogram.nearest_neighbor_backend.auto.search"]], "pe.histogram.nearest_neighbor_backend.faiss": [[66, "module-pe.histogram.nearest_neighbor_backend.faiss"]], "search() (in module pe.histogram.nearest_neighbor_backend.faiss)": [[66, "pe.histogram.nearest_neighbor_backend.faiss.search"]], "pe.histogram.nearest_neighbor_backend.sklearn": [[67, "module-pe.histogram.nearest_neighbor_backend.sklearn"]], "search() (in module pe.histogram.nearest_neighbor_backend.sklearn)": [[67, "pe.histogram.nearest_neighbor_backend.sklearn.search"]], "nearestneighbors (class in pe.histogram.nearest_neighbors)": [[68, "pe.histogram.nearest_neighbors.NearestNeighbors"]], "__init__() (pe.histogram.nearest_neighbors.nearestneighbors method)": [[68, "pe.histogram.nearest_neighbors.NearestNeighbors.__init__"]], "_compute_lookahead_embedding() (pe.histogram.nearest_neighbors.nearestneighbors method)": [[68, "pe.histogram.nearest_neighbors.NearestNeighbors._compute_lookahead_embedding"]], "_log_lookahead() (pe.histogram.nearest_neighbors.nearestneighbors method)": [[68, "pe.histogram.nearest_neighbors.NearestNeighbors._log_lookahead"]], "_log_voting_details() (pe.histogram.nearest_neighbors.nearestneighbors method)": [[68, "pe.histogram.nearest_neighbors.NearestNeighbors._log_voting_details"]], "compute_histogram() (pe.histogram.nearest_neighbors.nearestneighbors method)": [[68, "pe.histogram.nearest_neighbors.NearestNeighbors.compute_histogram"]], "pe.histogram.nearest_neighbors": [[68, "module-pe.histogram.nearest_neighbors"]], "azureopenaillm (class in pe.llm)": [[69, "pe.llm.AzureOpenAILLM"]], "huggingfacellm (class in pe.llm)": [[69, "pe.llm.HuggingfaceLLM"]], "llm (class in pe.llm)": [[69, "pe.llm.LLM"]], "openaillm (class in pe.llm)": [[69, "pe.llm.OpenAILLM"]], "request (namedtuple in pe.llm)": [[69, "pe.llm.Request"], [69, "pe.llm.Request.generation_args"], [69, "pe.llm.Request.messages"]], "__init__() (pe.llm.azureopenaillm method)": [[69, "pe.llm.AzureOpenAILLM.__init__"]], "__init__() (pe.llm.huggingfacellm method)": [[69, "pe.llm.HuggingfaceLLM.__init__"]], "__init__() (pe.llm.openaillm method)": [[69, "pe.llm.OpenAILLM.__init__"]], "_get_conv_template() (pe.llm.huggingfacellm method)": [[69, "pe.llm.HuggingfaceLLM._get_conv_template"]], "_get_environment_variable() (pe.llm.azureopenaillm method)": [[69, "pe.llm.AzureOpenAILLM._get_environment_variable"]], "_get_environment_variable() (pe.llm.openaillm method)": [[69, "pe.llm.OpenAILLM._get_environment_variable"]], "_get_prompt() (pe.llm.huggingfacellm method)": [[69, "pe.llm.HuggingfaceLLM._get_prompt"]], "_get_response_for_one_request() (pe.llm.azureopenaillm method)": [[69, "pe.llm.AzureOpenAILLM._get_response_for_one_request"]], "_get_response_for_one_request() (pe.llm.openaillm method)": [[69, "pe.llm.OpenAILLM._get_response_for_one_request"]], "_get_responses() (pe.llm.huggingfacellm method)": [[69, "pe.llm.HuggingfaceLLM._get_responses"]], "generation_arg_map (pe.llm.azureopenaillm property)": [[69, "pe.llm.AzureOpenAILLM.generation_arg_map"]], "generation_arg_map (pe.llm.huggingfacellm property)": [[69, "pe.llm.HuggingfaceLLM.generation_arg_map"]], "generation_arg_map (pe.llm.llm property)": [[69, "pe.llm.LLM.generation_arg_map"]], "generation_args (namedtuple field)": [[69, "pe.llm.Request.generation_args"], [77, "pe.llm.request.Request.generation_args"]], "get_generation_args() (pe.llm.llm method)": [[69, "pe.llm.LLM.get_generation_args"]], "get_responses() (pe.llm.azureopenaillm method)": [[69, "pe.llm.AzureOpenAILLM.get_responses"]], "get_responses() (pe.llm.huggingfacellm method)": [[69, "pe.llm.HuggingfaceLLM.get_responses"]], "get_responses() (pe.llm.llm method)": [[69, "pe.llm.LLM.get_responses"]], "get_responses() (pe.llm.openaillm method)": [[69, "pe.llm.OpenAILLM.get_responses"]], "messages (namedtuple field)": [[69, "pe.llm.Request.messages"], [77, "pe.llm.request.Request.messages"]], "pe.llm": [[69, "module-pe.llm"]], "azureopenaillm (class in pe.llm.azure_openai)": [[70, "pe.llm.azure_openai.AzureOpenAILLM"]], "__init__() (pe.llm.azure_openai.azureopenaillm method)": [[70, "pe.llm.azure_openai.AzureOpenAILLM.__init__"]], "_get_environment_variable() (pe.llm.azure_openai.azureopenaillm method)": [[70, "pe.llm.azure_openai.AzureOpenAILLM._get_environment_variable"]], "_get_response_for_one_request() (pe.llm.azure_openai.azureopenaillm method)": [[70, "pe.llm.azure_openai.AzureOpenAILLM._get_response_for_one_request"]], "generation_arg_map (pe.llm.azure_openai.azureopenaillm property)": [[70, "pe.llm.azure_openai.AzureOpenAILLM.generation_arg_map"]], "get_responses() (pe.llm.azure_openai.azureopenaillm method)": [[70, "pe.llm.azure_openai.AzureOpenAILLM.get_responses"]], "pe.llm.azure_openai": [[70, "module-pe.llm.azure_openai"]], "pe.llm.huggingface": [[71, "module-pe.llm.huggingface"]], "huggingfacellm (class in pe.llm.huggingface.huggingface)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM"]], "__init__() (pe.llm.huggingface.huggingface.huggingfacellm method)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM.__init__"]], "_get_conv_template() (pe.llm.huggingface.huggingface.huggingfacellm method)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM._get_conv_template"]], "_get_prompt() (pe.llm.huggingface.huggingface.huggingfacellm method)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM._get_prompt"]], "_get_responses() (pe.llm.huggingface.huggingface.huggingfacellm method)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM._get_responses"]], "generation_arg_map (pe.llm.huggingface.huggingface.huggingfacellm property)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM.generation_arg_map"]], "get_responses() (pe.llm.huggingface.huggingface.huggingfacellm method)": [[72, "pe.llm.huggingface.huggingface.HuggingfaceLLM.get_responses"]], "pe.llm.huggingface.huggingface": [[72, "module-pe.llm.huggingface.huggingface"]], "pe.llm.huggingface.register_fastchat": [[73, "module-pe.llm.huggingface.register_fastchat"]], "pe.llm.huggingface.register_fastchat.gpt2": [[74, "module-pe.llm.huggingface.register_fastchat.gpt2"]], "register() (in module pe.llm.huggingface.register_fastchat.gpt2)": [[74, "pe.llm.huggingface.register_fastchat.gpt2.register"]], "llm (class in pe.llm.llm)": [[75, "pe.llm.llm.LLM"]], "generation_arg_map (pe.llm.llm.llm property)": [[75, "pe.llm.llm.LLM.generation_arg_map"]], "get_generation_args() (pe.llm.llm.llm method)": [[75, "pe.llm.llm.LLM.get_generation_args"]], "get_responses() (pe.llm.llm.llm method)": [[75, "pe.llm.llm.LLM.get_responses"]], "pe.llm.llm": [[75, "module-pe.llm.llm"]], "openaillm (class in pe.llm.openai)": [[76, "pe.llm.openai.OpenAILLM"]], "__init__() (pe.llm.openai.openaillm method)": [[76, "pe.llm.openai.OpenAILLM.__init__"]], "_get_environment_variable() (pe.llm.openai.openaillm method)": [[76, "pe.llm.openai.OpenAILLM._get_environment_variable"]], "_get_response_for_one_request() (pe.llm.openai.openaillm method)": [[76, "pe.llm.openai.OpenAILLM._get_response_for_one_request"]], "get_responses() (pe.llm.openai.openaillm method)": [[76, "pe.llm.openai.OpenAILLM.get_responses"]], "pe.llm.openai": [[76, "module-pe.llm.openai"]], "request (namedtuple in pe.llm.request)": [[77, "pe.llm.request.Request"], [77, "pe.llm.request.Request.generation_args"], [77, "pe.llm.request.Request.messages"]], "pe.llm.request": [[77, "module-pe.llm.request"]], "csvprint (class in pe.logger)": [[78, "pe.logger.CSVPrint"]], "imagefile (class in pe.logger)": [[78, "pe.logger.ImageFile"]], "logprint (class in pe.logger)": [[78, "pe.logger.LogPrint"]], "logger (class in pe.logger)": [[78, "pe.logger.Logger"]], "matplotlibpdf (class in pe.logger)": [[78, "pe.logger.MatplotlibPDF"]], "__init__() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint.__init__"]], "__init__() (pe.logger.imagefile method)": [[78, "pe.logger.ImageFile.__init__"]], "__init__() (pe.logger.logprint method)": [[78, "pe.logger.LogPrint.__init__"]], "__init__() (pe.logger.matplotlibpdf method)": [[78, "pe.logger.MatplotlibPDF.__init__"]], "_clear_logs() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint._clear_logs"]], "_flush() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint._flush"]], "_get_image_path() (pe.logger.imagefile method)": [[78, "pe.logger.ImageFile._get_image_path"]], "_get_log_path() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint._get_log_path"]], "_get_pdf_path() (pe.logger.matplotlibpdf method)": [[78, "pe.logger.MatplotlibPDF._get_pdf_path"]], "_log_float() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint._log_float"]], "_log_image() (pe.logger.imagefile method)": [[78, "pe.logger.ImageFile._log_image"]], "_log_image_list() (pe.logger.imagefile method)": [[78, "pe.logger.ImageFile._log_image_list"]], "clean_up() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint.clean_up"]], "clean_up() (pe.logger.logger method)": [[78, "pe.logger.Logger.clean_up"]], "log() (pe.logger.csvprint method)": [[78, "pe.logger.CSVPrint.log"]], "log() (pe.logger.imagefile method)": [[78, "pe.logger.ImageFile.log"]], "log() (pe.logger.logprint method)": [[78, "pe.logger.LogPrint.log"]], "log() (pe.logger.logger method)": [[78, "pe.logger.Logger.log"]], "log() (pe.logger.matplotlibpdf method)": [[78, "pe.logger.MatplotlibPDF.log"]], "pe.logger": [[78, "module-pe.logger"]], "csvprint (class in pe.logger.csv_print)": [[79, "pe.logger.csv_print.CSVPrint"]], "__init__() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint.__init__"]], "_clear_logs() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint._clear_logs"]], "_flush() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint._flush"]], "_get_log_path() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint._get_log_path"]], "_log_float() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint._log_float"]], "clean_up() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint.clean_up"]], "log() (pe.logger.csv_print.csvprint method)": [[79, "pe.logger.csv_print.CSVPrint.log"]], "pe.logger.csv_print": [[79, "module-pe.logger.csv_print"]], "imagefile (class in pe.logger.image_file)": [[80, "pe.logger.image_file.ImageFile"]], "__init__() (pe.logger.image_file.imagefile method)": [[80, "pe.logger.image_file.ImageFile.__init__"]], "_get_image_path() (pe.logger.image_file.imagefile method)": [[80, "pe.logger.image_file.ImageFile._get_image_path"]], "_log_image() (pe.logger.image_file.imagefile method)": [[80, "pe.logger.image_file.ImageFile._log_image"]], "_log_image_list() (pe.logger.image_file.imagefile method)": [[80, "pe.logger.image_file.ImageFile._log_image_list"]], "log() (pe.logger.image_file.imagefile method)": [[80, "pe.logger.image_file.ImageFile.log"]], "pe.logger.image_file": [[80, "module-pe.logger.image_file"]], "logprint (class in pe.logger.log_print)": [[81, "pe.logger.log_print.LogPrint"]], "__init__() (pe.logger.log_print.logprint method)": [[81, "pe.logger.log_print.LogPrint.__init__"]], "log() (pe.logger.log_print.logprint method)": [[81, "pe.logger.log_print.LogPrint.log"]], "pe.logger.log_print": [[81, "module-pe.logger.log_print"]], "logger (class in pe.logger.logger)": [[82, "pe.logger.logger.Logger"]], "clean_up() (pe.logger.logger.logger method)": [[82, "pe.logger.logger.Logger.clean_up"]], "log() (pe.logger.logger.logger method)": [[82, "pe.logger.logger.Logger.log"]], "pe.logger.logger": [[82, "module-pe.logger.logger"]], "matplotlibpdf (class in pe.logger.matplotlib_pdf)": [[83, "pe.logger.matplotlib_pdf.MatplotlibPDF"]], "__init__() (pe.logger.matplotlib_pdf.matplotlibpdf method)": [[83, "pe.logger.matplotlib_pdf.MatplotlibPDF.__init__"]], "_get_pdf_path() (pe.logger.matplotlib_pdf.matplotlibpdf method)": [[83, "pe.logger.matplotlib_pdf.MatplotlibPDF._get_pdf_path"]], "log() (pe.logger.matplotlib_pdf.matplotlibpdf method)": [[83, "pe.logger.matplotlib_pdf.MatplotlibPDF.log"]], "pe.logger.matplotlib_pdf": [[83, "module-pe.logger.matplotlib_pdf"]], "execution_logger (in module pe.logging)": [[84, "pe.logging.execution_logger"]], "pe.logging": [[84, "module-pe.logging"]], "setup_logging() (in module pe.logging)": [[84, "pe.logging.setup_logging"]], "floatlistmetricitem (class in pe.metric_item)": [[85, "pe.metric_item.FloatListMetricItem"]], "floatmetricitem (class in pe.metric_item)": [[85, "pe.metric_item.FloatMetricItem"]], "imagelistmetricitem (class in pe.metric_item)": [[85, "pe.metric_item.ImageListMetricItem"]], "imagemetricitem (class in pe.metric_item)": [[85, "pe.metric_item.ImageMetricItem"]], "matplotlibmetricitem (class in pe.metric_item)": [[85, "pe.metric_item.MatplotlibMetricItem"]], "metricitem (class in pe.metric_item)": [[85, "pe.metric_item.MetricItem"]], "__init__() (pe.metric_item.imagelistmetricitem method)": [[85, "pe.metric_item.ImageListMetricItem.__init__"]], "__init__() (pe.metric_item.metricitem method)": [[85, "pe.metric_item.MetricItem.__init__"]], "clean_up() (pe.metric_item.matplotlibmetricitem method)": [[85, "pe.metric_item.MatplotlibMetricItem.clean_up"]], "clean_up() (pe.metric_item.metricitem method)": [[85, "pe.metric_item.MetricItem.clean_up"]], "metric_scope (class in pe.metric_item)": [[85, "pe.metric_item.metric_scope"]], "name (pe.metric_item.metricitem property)": [[85, "pe.metric_item.MetricItem.name"]], "num_images_per_row (pe.metric_item.imagelistmetricitem property)": [[85, "pe.metric_item.ImageListMetricItem.num_images_per_row"]], "pe.metric_item": [[85, "module-pe.metric_item"]], "value (pe.metric_item.metricitem property)": [[85, "pe.metric_item.MetricItem.value"]], "pepopulation (class in pe.population)": [[86, "pe.population.PEPopulation"]], "population (class in pe.population)": [[86, "pe.population.Population"]], "__init__() (pe.population.pepopulation method)": [[86, "pe.population.PEPopulation.__init__"]], "_post_process_histogram() (pe.population.pepopulation method)": [[86, "pe.population.PEPopulation._post_process_histogram"]], "_select_data() (pe.population.pepopulation method)": [[86, "pe.population.PEPopulation._select_data"]], "initial() (pe.population.pepopulation method)": [[86, "pe.population.PEPopulation.initial"]], "initial() (pe.population.population method)": [[86, "pe.population.Population.initial"]], "next() (pe.population.pepopulation method)": [[86, "pe.population.PEPopulation.next"]], "next() (pe.population.population method)": [[86, "pe.population.Population.next"]], "pe.population": [[86, "module-pe.population"]], "pepopulation (class in pe.population.pe_population)": [[87, "pe.population.pe_population.PEPopulation"]], "__init__() (pe.population.pe_population.pepopulation method)": [[87, "pe.population.pe_population.PEPopulation.__init__"]], "_post_process_histogram() (pe.population.pe_population.pepopulation method)": [[87, "pe.population.pe_population.PEPopulation._post_process_histogram"]], "_select_data() (pe.population.pe_population.pepopulation method)": [[87, "pe.population.pe_population.PEPopulation._select_data"]], "initial() (pe.population.pe_population.pepopulation method)": [[87, "pe.population.pe_population.PEPopulation.initial"]], "next() (pe.population.pe_population.pepopulation method)": [[87, "pe.population.pe_population.PEPopulation.next"]], "pe.population.pe_population": [[87, "module-pe.population.pe_population"]], "population (class in pe.population.population)": [[88, "pe.population.population.Population"]], "initial() (pe.population.population.population method)": [[88, "pe.population.population.Population.initial"]], "next() (pe.population.population.population method)": [[88, "pe.population.population.Population.next"]], "pe.population.population": [[88, "module-pe.population.population"]], "pe (class in pe.runner)": [[89, "pe.runner.PE"]], "__init__() (pe.runner.pe method)": [[89, "pe.runner.PE.__init__"]], "_clean_up_loggers() (pe.runner.pe method)": [[89, "pe.runner.PE._clean_up_loggers"]], "_get_num_samples_per_label_id() (pe.runner.pe method)": [[89, "pe.runner.PE._get_num_samples_per_label_id"]], "_log_metrics() (pe.runner.pe method)": [[89, "pe.runner.PE._log_metrics"]], "evaluate() (pe.runner.pe method)": [[89, "pe.runner.PE.evaluate"]], "load_checkpoint() (pe.runner.pe method)": [[89, "pe.runner.PE.load_checkpoint"]], "pe.runner": [[89, "module-pe.runner"]], "run() (pe.runner.pe method)": [[89, "pe.runner.PE.run"]], "pe (class in pe.runner.pe)": [[90, "pe.runner.pe.PE"]], "__init__() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE.__init__"]], "_clean_up_loggers() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE._clean_up_loggers"]], "_get_num_samples_per_label_id() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE._get_num_samples_per_label_id"]], "_log_metrics() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE._log_metrics"]], "evaluate() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE.evaluate"]], "load_checkpoint() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE.load_checkpoint"]], "pe.runner.pe": [[90, "module-pe.runner.pe"]], "run() (pe.runner.pe.pe method)": [[90, "pe.runner.pe.PE.run"]], "pe.util": [[91, "module-pe.util"]], "download() (in module pe.util.download)": [[92, "pe.util.download.download"]], "pe.util.download": [[92, "module-pe.util.download"]]}})